program H;
{$H+}
uses
  SysUtils;

const
  TRUE_BASE = 1000000000;
type
  TLongNumber = record
    dig: array of uint32;
  end;

  function MultLongLong(lhs, rhs: TLongNumber): TLongNumber;
  var
    i, j, ost: qword;
  begin
    ost := 0;
    SetLength(Result.dig, length(lhs.dig) + length(rhs.dig));
    for i := 0 to length(lhs.dig) - 1 do
    begin

      for j := 0 to length(rhs.dig) - 1 do
      begin
        ost := ost + lhs.dig[i] * rhs.dig[j] + Result.dig[i + j];
        Result.dig[i + j] := ost mod TRUE_BASE;
        ost := ost div TRUE_BASE;
      end;
      if ost > 0 then
        Result.dig[i + length(rhs.dig)] := Result.dig[i + length(rhs.dig)] + ost;
    end;
  end;

  function fromString(const str: ansistring): TLongNumber;
  var
    j, i, ost: integer;
    TimedStr: string;
  begin
    TimedStr := '';
    ost := 0;
    if (length(str) mod 9 <> 0) then
      ost := 1;
    j := 0;
    SetLength(Result.dig, (length(str) div 9) + ost);
    for i := length(str) downto 1 do
    begin
      if str[i] <> ' ' then
      begin
        if length(TimedStr) = 9 then
        begin
          Result.dig[j] := StrToInt(TimedStr);
          j += 1;
          timedStr := '';
        end;
        timedStr := str[i] + timedStr;
      end;
    end;
    if TimedStr <> '' then
      Result.dig[j] := StrToInt(TimedStr);
  end;

  function toString(const val: TLongNumber): ansistring;
  var
    i: integer;
    divBASE: uint64;
    Zero: boolean;
  begin
    Zero := True;
    for i := (length(val.dig) - 1) downto 0 do
    begin
      divBASE := 100000000;
      if (val.dig[i] = 0) and (Zero) and (i <> 0) then
        continue
      else
      begin
        if (not (Zero)) then
        begin
          while ((val.dig[i] div divBASE = 0) and (divBase <> 1)) do
          begin
            Result += '0';
            divBase := divBase div 10;
          end;
        end;
        Result += IntToStr(val.dig[i]);

        Zero := False;
      end;
    end;
  end;

  operator := (val: byte) res: TLongNumber;
  var
    i: integer;
    q: QWord;
  begin
    q := 100000000;
    SetLength(res.dig, 0);
    i := 0;
    val := abs(val);
    while (val > 0) do
    begin
      SetLength(res.dig, i + 1);
      res.dig[i] := val mod q;
      val := val div q;
      Inc(i);
    end;
    if Length(res.dig) = 0 then
    begin
      SetLength(res.dig, 1);
      res.dig[0] := 0;
    end;
  end;

  function stepen(x: TLongNumber; n: integer): ansistring;
  var
    res: Tlongnumber;
  begin
    res := 1;
    while n <> 0 do
    begin
      if n mod 2 = 1 then
        res := MultLongLong(res, x);
      x := MultLongLong(x, x);
      n := n div 2;
    end;
    exit(Tostring(res));
  end;

var
  s: ansistring;
  n: integer;
  number: Tlongnumber;

begin
  Assign(input, 'input.txt');
  Assign(output, 'output.txt');
  reset(input);
  rewrite(output);
  readln(s);
  Read(n);
  if s = '0' then begin
    write(0);
    exit;
  end;
  number := fromstring(s);
  s := (Stepen(number, n));
  Writeln(s);
  close(input);
  close(output);
end.