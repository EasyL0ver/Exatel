#include <fstream>
#include <queue>

using namespace std;

ifstream fin ("alee.in");
ofstream fout ("alee.out");

int n, m, h[180][180];
int start_x, start_y, end_x, end_y;
queue < pair <int, int> > coada;
int dx[4]={0, 1, 0, -1};
int dy[4]={1, 0, -1, 0};

bool ok (int x, int y)
{
    if ((x < 1 || y < 1 || x > n || y > n) || (h[x][y] == -1))
        return 0;
    return 1;
}

int main()
{
    fin >> n >> m;
    for (int i = 1; i <= m; ++i)
    {
        int x, y;
        fin >> x >> y;
        h[x][y] = -1;
    }
    fin >> start_x >> start_y >> end_x >> end_y;
    h[start_x][start_y] = 1;
    coada.push(make_pair(start_x, start_y));
    int xc, yc, xn, yn;
    while (!coada.empty())
    {
        xc = coada.front().first;
        yc = coada.front().second;
        coada.pop();
        for (int i = 0; i < 4; ++i)
        {
            xn = xc + dx[i];
            yn = yc + dy[i];
            if (ok(xn, yn) && h[xn][yn] < 1)
            {
                h[xn][yn] = h[xc][yc] + 1;
                coada.push(make_pair(xn, yn));
            }
        }
    }

    fout << h[end_x][end_y];
}