typedef struct {
	char *str;
	uint allocated_length;
} safe_string;

void safe_str_cat(safe_string *dest, safe_string *src)
{
	int dest_length = dest->allocated_length;
	int src_length = src->allocated_length;
	char *new_pointer = dest->str + src_length;
	new_pointer = (char*)malloc(sizeof (char)*(src_length + 1));
	int i;
	int j = 0;
	for(i = dest_length; i < (dest_length + src_length); i++)
	{
		dest->str[i] = src->str[j];
		j++;
	}
}

int main()
{
	char string1[] = "Hello, my friend!";
	char string2[] = "This is a very long sentence!";
	//char string3[] = "Woohoo!";


	safe_string* safe_str1 = make_string(string1);
	safe_string* safe_str2 = make_string(string2);
	//safe_string* safe_str3 = make_string(string3);
	safe_str_cat(safe_str1, safe_str2);
//	safe_str_cpy(safe_str1, safe_str2);
	printf("\n%s\n", safe_str1->str);
}