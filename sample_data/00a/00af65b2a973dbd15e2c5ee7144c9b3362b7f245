{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "   # How to Evaluate Decentralized Exchanges\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [],
   "source": [
    "btc_price = 5500\n",
    "\n",
    "data = [\"DEX,status,PRICE,Circulating supply,Total Supply,BTC Value,USD Value\"\n",
    ", \"DTX,D,0.00000304,22099932,46094019,140.1258178,770691.9977\"\n",
    ", \"Dether,D,0.00000184,83600000,100000000,184,1012000\"\n",
    ", \"ATLANT DEX,D,0.00000551,37551901,54175041,298.5044759,1641774.618\"\n",
    ", \"Arbidex,D,0.00001481,20421954,25000000,370.25,2036375\"\n",
    ", \"Blocktrade,L,0.00001044,54125290,57746762,602.8761953,3315819.074\"\n",
    ", \"Aphelion,D,0.00000967,50000000,70188440,678.7222148,3732972.181\"\n",
    ", \"Blockport,D,0.00001165,52870933,69434800,808.91542,4449034.81\"\n",
    ", \"LocalCoinSwap,D,0.0000127,52327599,72732420,923.701734,5080359.537\"\n",
    ", \"Counterparty,L,0.00051642,2615923,2615923,1350.914956,7430032.256\"\n",
    ", \"Melon,L,0.00182069,599400,749400,1364.425086,7504337.973\"\n",
    ", \"Linke Coin,D,0.0000029,112776150,500000000,1450,7975000\"\n",
    ", \"Mercury,D,0.00001452,100000000,100000000,1452,7986000\"\n",
    ", \"STEX,L,0.00000152,522694673,1000000000,1520,8360000\"\n",
    ", \"Stakenet,D,0.0000229,73335305,82464882,1888.445798,10386451.89\"\n",
    ", \"NIX,L,0.00005968,41934450,41934450,2502.647976,13764563.87\"\n",
    ", \"Mothership,D,0.00001318,140000000,200000000,2636,14498000\"\n",
    ", \"Leverj,D,0.00000315,118090511,1000000000,3150,17325000\"\n",
    ", \"SafeX,L,0.00000165,1543157590,2147483647,3543.348018,19488414.1\"\n",
    ", \"DEW,D,0.00002236,103244553,200000000,4472,24596000\"\n",
    ", \"Allbit,L,?,?,?,4660,25630000\"\n",
    ", \"LAToken,L,0.00001342,81037294,400000000,5368,29524000\"\n",
    ", \"Republic Protocol,L,0.00000552,601586967,1000000000,5520,30360000\"\n",
    ", \"AirSwap,L,0.00001124,150000000,500000000,5620,30910000\"\n",
    ", \"NXT,L,0.00000895,998999942,1000000000,8950,49225000\"\n",
    ", \"Ethos,D,0.00004125,82358464,222295208,9169.67733,50433225.32\"\n",
    ", \"Digitext Future,L,0.00000941,731250000,1000000000,9410,51755000\"\n",
    ", \"Fusion,D,0.00017494,29704811,57344000,10031.75936,55174676.48\"\n",
    ", \"Kyper Network,L,0.00005023,134132697,215625349,10830.86128,59569737.04\"\n",
    ", \"Bibox,D,0.00005098,102384714,265986997,13560.01711,74580094.09\"\n",
    ", \"Bancor,L,0.00018907,64972731,77641928,14679.75933,80738676.3\"\n",
    ", \"Eidoo,L,0.00017919,29261461,90208328,16164.43029,88904366.62\"\n",
    ", \"Loopring,L,0.00001279,788984491,1374955752,17585.68407,96721262.37\"\n",
    ", \"WanChain,L,0.0001219,106152493,210000000,25599,140794500\"\n",
    ", \"Waves,L,0.00026815,100000000,100000000,26815,147482500\"\n",
    ", \"Bcex,L,?,?,?,33609,184849500\"\n",
    ", \"Bitshares,L,0.00001312,2672600000,3600570502,47239.48499,259817167.4\"\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [],
   "source": [
    "csv = [r.split(',') for r in data]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as p\n",
    "df=p.DataFrame.from_records(csv[1:], columns=csv[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3315819.0739999996"
      ]
     },
     "execution_count": 136,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['USD Value'] = p.to_numeric(df['USD Value'])\n",
    "launched=df.loc[df['status']=='L']\n",
    "dev=df.loc[df['status']=='D']\n",
    "\n",
    "xl=list(range(len(launched)))\n",
    "yl=list(launched['USD Value'])\n",
    "zl=launched['DEX']\n",
    "\n",
    "xd=list(range(len(dev)))\n",
    "yd=list(dev['USD Value'])\n",
    "zd=dev['DEX']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png":