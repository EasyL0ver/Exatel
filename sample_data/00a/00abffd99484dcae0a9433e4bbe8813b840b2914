/*Heitor Rossi Ambiel Facini
 * Ra: 136045
 * 
 * RED GREEN
 * 
 * Objetivo: Ler um tabuleiro inicial do jogo RedGreen e 
 * 			 determinar se é possível vencer o jogo naquele tabuleiro.
 *           Se for possível vencer, o seu programa deve imprimir 
 *           a sequência de moedas que devem ser removidas 
 * 			 para vencer o jogo.
 * 
 * Entrada:  Número de peças no tabuleiro do jogo.
 * 			 Peças do tabuleiro do jogo.
 * 
 * Saída:    Verificação se é possivel ou não ser vencido o jogo.
 * 			 Sequencia de peças retiradas.
 * 
 */

#include <stdio.h>

int main()
{
	int leitura[1000];
	int saida[2000];
	int qtasPecas;
	int i;
	int countSaida = 0;
	int valido = 1;
	
	do
	{
		scanf("%i", &qtasPecas);
	}
	while (qtasPecas > 1000);
	for(i = 0; i <= qtasPecas - 1; i++)
	{
		scanf("%i", &entrada[i])
	} 
	
	for (i = 0; i <= qtasPecas - 1; i++)
	{
		if (leitura[i] == 1)
		{
			if(i != 0)
			{
				switch (leitura[i-1]){
					case 1:
						leitura[i-1] = 0;
						break;
					case 0:
						leitura [i-1] = 1;
						break;
					}
			 }
			 if(i != (qtasPecas - 1))
			 {
				switch (leitura[i+1])
				{
					case 1:
						leitura[i+1] = 0;
						break;
					case 0:
						leitura [i+1] = 1;
						break;
				}
			 }
			 leitura[i] = - 1;
			 saida[countSaida] = i;
			 countSaida++;
			 i = 0;
		 }
		 
		 
			  
			 	
						
				
							
	  }
	  for(i = 0; i <= qtasPecas - 1; i++)
	  {
		  printf("\n '%i' \n", leitura[i]);
			 if (leitura[i] != -1)
			 {
				 valido = 0;
				 break;
			 }
	  }
	  switch (valido)
	  {
			 case 1:
			 {
				
				printf("Sim\n");
				for(i = 0; i <= countSaida; i++)
				{
					printf("%i ", saida[i]);
				}
				printf("\n");
			 }
			 break;
			 case 0:
			 {
				 printf("Não\n");
			 }
	  }

	
	
	
	
	return 0;
}