# include <stdio.h>
# include  <stdlib.h>
# include  <windows.h>
# include  <unistd.h>
# include  <time.h>
# include  <conio.h>
# include  <locale.h>
# include  <string.h>

# define  sleep ( x ) Sleep ( 1000 * (x))
# define  nomeJogo () SetConsoleTitle ( " PAC-MAN " )
# define  tempoRandom () srand (time ( NULL ));
# define  pt_br () setlocale (LC_ALL, " portuguese " )
# define  sistema corJogo () ( " cor f " )
# define  limpaTela () printf ( " \ 033 [H " )
# define  linha () printf ( " \ n ---------------------------------------- ----- " )


struct Mapa {
	char vet_mapa [ 13 ] [ 20 ], vet_pontos [ 13 ] [ 20 ];
	int dificuldade;
} mapa;

struct Player {
	char tecla, simbolo;
	int pos_i, pos_j, nav, pontos, m_pontos, cheat;
}jogador;

struct Fantasma {
	char simbolo;
	int pos_i, pos_j, nav, ia, cont;
} fantasma [ 4 ];


// funcKbhit
void  funcKbhit () {
	if ( kbhit ()) {
			fflush (stdin);
			jogador. tecla = getch ();
		}
}

// Colorir
void  colorido ( int F, int B) {
	WORD wColor = ((B & 0x0F ) << 4 ) + (F e 0x0F );
	SetConsoleTextAttribute ( GetStdHandle (STD_OUTPUT_HANDLE), wColor);
}

// Esconde o cursor
void  esconderCursor () {
   Cursor CONSOLE_CURSOR_INFO = { 1 , FALSE };
   SetConsoleCursorInfo ( GetStdHandle (STD_OUTPUT_HANDLE), e cursor);
}

// Arte Pac
void  artePac () {
	desenhos ( 6 , 0 );
	printf ( " = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = \ n " );
	printf ( "     _ __ __ _ ___ _ __ ___ __ _ _ __      \ n " );
	printf ( "    | '_ \\ / _ | / __ |' _` _ \\ / _` | '_ \\     \ n " );
	printf ( "    | | _) | (_ | | (__ | | | | | (_ | | | |    \ n " );
	printf ( "    | .__ / \\ __._ | \\ _ | _ | | _ | | _ | \\ __, _ | _ | | _ |    \ n " );
	printf ( "    | |                                         \ n " );
	printf ( "    | _ |                                         \ n " );
	printf ( " = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = \ n " );
	colorir ( 15 , 0 );

}

// Efeito de Loading
void  loading () {
	int i;
	printf ( " \ n \ n \ n \ n \ n \ n \ t \ t    " );
	para (i = 0 ; i < 3 ; i ++) {
		printf ( " . " );
		Sono ( 200 );
	}
	sistema ( " cls " );
}

// Opções Tela Inicial
int  opcoesMenu ( carvão animal Tecla, int NAV) {
	char dificuldade [ 5 ];
	linha ();
	switch (mapa. dificuldade ) {
		caso  250 :
			strcpy (dificuldade, " Fácil " );
			pausa ;
		case  150 :
			strcpy (dificuldade, " Médio " );
			pausa ;
		caso  120 :
			strcpy (dificuldade, " Béééé " );
			pausa ;
	}
	switch (nav) {
		caso  0 :
			desenhos ( 3 , 0 );
			printf ( " \ n \ t       > Iniciar        " );
			colorir ( 15 , 0 );
			printf ( " \ n \ t           Instruções    " );
			printf ( " \ n \ t           Dificuldade   " );
			printf ( " \ n \ t           Avaliado     " );
			printf ( " \ n \ t           Créditos      " );
			printf ( " \ n \ t           Sair          " );
			desenhos ( 8 , 0 );
			printf ( " \ n \ t \ t \ t \ t Nível: % s " , dificuldade);
			colorir ( 15 , 0 );
			se (tecla == 13 ) {
				return  0 ;
			}
			pausa ;
		caso  1 :

			printf ( " \ n \           tIniciar          " );
			desenhos ( 3 , 0 );
			printf ( " \ n \ t       > Instruções        " );
			colorir ( 15 , 0 );
			printf ( " \ n \ t           Dificuldade      " );
			printf ( " \ n \ t           Avaliado        " );
			printf("\n\t          Créditos        ");
			printf("\n\t          Sair            ");
			colorir(8,0);
			printf("\n\t\t\t\tNível: %s", dificuldade);
			colorir(15,0);
			if(tecla == 13){
				return 1;
			}
			break;
		case 2:
			printf("\n\t          Iniciar         ");
			printf("\n\t          Instruções      ");
			colorir(3,0);
			printf("\n\t      >  Dificuldade      ");
			colorir(15,0);
			printf("\n\t          Pontuação       ");
			printf("\n\t          Créditos        ");
			printf("\n\t          Sair            ");
			colorir(8,0);
			printf("\n\t\t\t\tNível: %s", dificuldade);
			colorir(15,0);
			if(tecla == 13){
				return 2;
			}
			break;
		case 3:
			printf("\n\t          Iniciar         ");
			printf("\n\t          Instruções      ");
			printf("\n\t          Dificuldade     ");
			colorir(3,0);
			printf("\n\t      >  Pontuação        ");
			colorir(15,0);
			printf("\n\t          Créditos        ");
			printf("\n\t          Sair            ");
			colorir(8,0);
			printf("\n\t\t\t\tNível: %s", dificuldade);
			colorir(15,0);
			if(tecla == 13){
				return 3;
			}
			break;
		case 4:

			printf("\n\t          Iniciar         ");
			printf("\n\t          Instrucões      ");
			printf("\n\t          Dificuldade     ");
			printf("\n\t          Pontuação       ");
			colorir(3,0);
			printf("\n\t      >  Créditos         ");
			colorir(15,0);
			printf("\n\t          Sair            ");
			colorir(8,0);
			printf("\n\t\t\t\tNível: %s", dificuldade);
			colorir(15,0);
			if(tecla == 13){
				return 4;
			}
			break;
		case 5:

			printf("\n\t          Iniciar         ");
			printf("\n\t          Instrucões      ");
			printf("\n\t          Dificuldade     ");
			printf("\n\t          Pontuação       ");
			printf("\n\t          Créditos        ");
			colorir(3,0);
			printf("\n\t      >  Sair             ");
			colorir(15,0);
			colorir(8,0);
			printf("\n\t\t\t\tNível: %s", dificuldade);
			colorir(15,0);
			if(tecla == 13){
				return 5;
			}
		}
		linha();
}

// Tela Instruções
void instrucoes(){
	system("cls");
	loading();
	artePac();
	printf("\t\t- INSTRUÇÕES -");
	linha();
	printf("\n Controle:\n");
	colorir(12,0);
	printf("\t   [W] Cima\t [A] Esquerda\n\t   [S] Baixo\t [D] Direita\n\n\t   [P] Pausar");
	colorir(15,0);
	linha();
	printf("\n Objetivo: \n");
	colorir(3,0);
	printf("\t   Coma todas as bolinhas no mapa.\n");
	printf("\n\t   Não deixe que os fantasmas o \n\t   toquem!");
	colorir(15,0);
	linha();
	colorir(8,0);
	printf("\n\n   Pressione qualquer tecla para voltar...");
	colorir(15,0);
	system("pause > nul");
	system("cls");
	loading();
}

// Tela Dificuldade
int dificuldade(){
		system("cls");
		loading();
		player.nav = 0;
		player.tecla = ' ';
	do{
		artePac();
		printf("\t\t- DIFICULDADE -");
		linha();
		funcKbhit();
		switch(player.tecla){
			case 'w':
				if(player.nav > 0){
					player.nav--;
					player.tecla = ' ';
				}
				break;
			case 's':
				if(player.nav < 2){
					player.nav++;
					player.tecla = ' ';
				}
		}
		switch(player.nav){
			case 0:
				colorir(3,0);
				printf("\n\t         >  Fácil     ");
				colorir(15,0);
				printf("\n\t             Médio    ");
				printf("\n\t             Béééé  ");
				funcKbhit();
				if(player.tecla == 13){
					mapa.dificuldade = 250;
					system("cls");
					loading();
					return 0;
				}
				break;
			case 1:
				printf("\n\t             Fácil    ");
				colorir(6,0);
				printf("\n\t         >  Médio     ");
				colorir(15,0);
				printf("\n\t             Béééé  ");
				funcKbhit();
				if(player.tecla == 13){
					mapa.dificuldade = 150;
					system("cls");
					loading();
					return 0;
				}
				break;
			case 2:
				printf("\n\t             Fácil    ");
				printf("\n\t             Médio    ");
				colorir(4,0);
				printf("\n\t         >  Béééé     ");
				colorir(15,0);
				funcKbhit();
				if(player.tecla == 13){
					mapa.dificuldade = 120;
					system("cls");
					loading();
					return 0;
				}
				break;
		}
		Sleep(200);
		limpaTela();
	}while(1);
	system("pause > nul");
	system("cls");
	loading();
}

// Tela Pontuação
void pontuacao(int pontos){
	system("cls");
	loading();
	artePac();
	printf("\t\t- PONTUAÇÃO -");
	linha();
	colorir(3,0);
	printf("\n\t    Pontuação Máxima: ");
	colorir(15,0);
	printf("%04d", player.m_pontos);
	colorir(8,0);
	printf("\n\n\n\n\n\n\n\n\n\n\n\n\n   Pressione qualquer tecla para voltar...");
	colorir(15,0);
	system("pause > nul");
	system("cls");
	loading();
}

// Tela Créditos
void creditos(){
	system("cls");
	loading();
	artePac();
	printf("\t\t- CRÉDITOS -");
	linha();
	colorir(3,0);
	printf("\n\t   Cesar Mauricio Chauchuty");
	printf("\n\t   Gabriel Da Cruz Rakovicz");
	colorir(15,0);
	colorir(8,0);
	printf("\n\n\n\n\n\n\n\n\n\n\n\n   Pressione qualquer tecla para voltar...");
	colorir(15,0);
	system("pause > nul");
	system("cls");
	loading();
}

// Tela Sair
void sair(){
	int i;
	system("cls");
	Sleep(500);
	printf("\n\n\n\t\t  Saindo");
	for(i = 0; i < 3; i++){
		printf(". ");
		Sleep(500);
	}
	// "Cheat"
	if(player.cheat == 1){
		colorir(4, 0);
		printf("\n\n");
		printf("\t  Béééééé!!!                           \n");
		printf("\n                    / /                 ");
		printf("\n                  _(.(.                 ");
		printf("\n                ,'9 )\\)`-.,.--.        ");
		printf("\n                `-.|           `.       ");
		printf("\n                   \\,      ,    \\)    ");
		printf("\n                    `.  )._\\   (\\     ");
		printf("\n                      |//   `-,//       ");
		printf("\n                      ]||    //""       ");
		printf("\n                      ""    ""          ");
		colorir(0, 0);
		sleep(2);
	}
	printf("\n\n");
	sleep(1);
	exit(0);
}

// Tela Você Perdeu
int vocePerdeu(){
	sleep(1);
	if(player.pontos > 0){
		player.pontos-= 10;
	}
	system("cls");
	loading();
	artePac();
	colorir(12,0);
	printf("\n\t\tVocê perdeu.");
	colorir(15,0);
	printf("\n\n\t\tPontos: ");
	colorir(3,0);
	printf("%04d", player.pontos);
	colorir(8,0);
	printf("\n\n\n\n\n\n\n\n\n\n\n\n   Pressione qualquer tecla para voltar...");
	colorir(15,0);
	system("pause > nul");
	system("cls");
	loading();
	return 0;
}

// Tela Você Ganhou
int voceGanhou(){
	sleep(1);
	system("cls");
