@Entity
@Component("user")
@Table(name="user")
@DynamicUpdate
@Inheritance(strategy = InheritanceType.JOINED)
public class User {

@Id
@GeneratedValue(strategy = GenerationType.IDENTITY)
@Range(min = 0, max = 1000000)
@Column(name="user_id")
private int UserId;

@Size(min = 6, max = 20)
@Column(name="password")
//@org.hibernate.annotations.Type(type="StringType")
private String password;

@Size(min=2, max=20)
@Column(name="first_name")
private String firstName;

@Size(min=2, max=20)
@Column(name="last_name")
private String lastName;

@Size(min=2,max=20)
@Column(name="surname")
private String surName;

@Email
@Column(name="email_address")
private String EmailAddress;

@Size(min = 10, max = 10)
@Phone(message = "please enter valid phone number")
@Column(name="mobile_number")
private String mobileNumber;
}
	
@SuppressWarnings({ "unchecked", "rawtypes" })
@PostMapping(value = "/candidate")
public ResponseEntity addCandidate(@Valid @RequestBody Candidate candidate, BindingResult result) {
    Map<String, Object> errors = new HashMap<String, Object>();
    if (result.hasErrors()) {
        here save error in errors list.
        }
        errors.put("error", errorList);
        return new ResponseEntity(errors, HttpStatus.NOT_ACCEPTABLE);
    }
    candidateService.addCandidate(candidate);
    return new ResponseEntity(HttpStatus.CREATED);
}