
Sub ProcMitoResults()
'
' ProcMitoResults Macro
'

'
Dim sheetnum, z, d, c
Dim rowNum(999)
Dim sheetname

' Declare variables
Dim a(9999), i
Dim Msg, style, Title
Dim myDrive, myLocation, LoadDir As String
Dim counter, loopLimit
' Initialize variables...
' *** IMPORTANT *** Replace the drive name "C" below w/ your reference
myDrive = "C"
' *** IMPORTANT *** Replace the file path below w/ your reference
myLocation = "Users\PG\Desktop\Temp\LM 07 ibidi\ExcelOutput"

Function GetFolder() As String
    Dim fldr As FileDialog
    Dim sItem As String
    Set fldr = Application.FileDialog(msoFileDialogFolderPicker)
    With fldr
        .Title = "Select a Folder"
        .AllowMultiSelect = False
        .InitialFileName = Application.DefaultFilePath
        If .Show <> -1 Then GoTo NextCode
        sItem = .SelectedItems(1)
    End With
NextCode:
    GetFolder = sItem
    Set fldr = Nothing
End Function

' Turn off screen updating (program runs faster)...
Application.ScreenUpdating = False

' Notify user of progress...
oldStatusBar = Application.DisplayStatusBar
Application.DisplayStatusBar = True
Application.StatusBar = "Searching for files; please wait..."
newHour = Hour(Now())
newMinute = Minute(Now())
newSecond = Second(Now()) + 2
waitTime = TimeSerial(newHour, newMinute, newSecond)
Application.Wait waitTime

'Set the filepath to the correct directory...
ChDrive myDrive
ChDir myDrive & ":\" & myLocation

' Initialize the array counter...
i = 0
' Load array with names of Excel files in correct directory...
a(i) = Dir("*.xls")
' If no Excel files are present, alert user & exit program...
If a(i) = "" Then
    GoTo FilesMissing ' the error handler...
    Exit Function
Else
    ' Loop through the Excel files to count files as loop limit...
    Do
        i = i + 1
        a(i) = Dir()
    Loop Until a(i) = ""
    ' Count the number of names in the array...
    fileCount = CStr(i)
    ' Notify user of number of files to be protected...
    Application.StatusBar = "Number of files to process: " & fileCount & " - please wait..."
    newHour = Hour(Now())
    newMinute = Minute(Now())
    newSecond = Second(Now()) + 2
    waitTime = TimeSerial(newHour, newMinute, newSecond)
    Application.Wait waitTime
    ' Start looping through the Excel file(s) to open & process each one...
    For MyFilCount = 0 To (fileCount - 1)
        LoadDir = CurDir & "\"
        Workbooks.Open LoadDir & (a(MyFilCount)), UpdateLinks:=0, _
        ReadOnly:=False, IgnoreReadOnlyRecommended:=True
        ' Provide file processing status to user ...
        Application.StatusBar = _
        "Processing file " & MyFilCount + 1 & " of " & fileCount & ": " & a(MyFilCount) & "; please wait..."
        newHour = Hour(Now())
        newMinute = Minute(Now())
        newSecond = Second(Now()) + 1
        waitTime = TimeSerial(newHour, newMinute, newSecond)
        Application.Wait waitTime
        ' add summary sheet
        Sheets.Add(Before:=Sheets(1)).Name = "Summary"
        Range("A3").Select
        ActiveCell.FormulaR1C1 = "Average"
        Range("A4").Select
        ActiveCell.FormulaR1C1 = "Median"
        Range("A5").Select
        ActiveCell.FormulaR1C1 = "Sum"
        Range("B2").Select
        sheetnum = Sheets.Count
        c = 2
        z = 2
        d = 0
        Do Until z > sheetnum
            Worksheets(z).Copy After:=Worksheets(sheetnum + d)
            Sheets(sheetnum + d + 1).Name = Sheets(z).Name + "res"
            Sheets(z).Select
            Range("B2").Select
            Cells.Find(What:="", After:=ActiveCell, LookIn:=xlValues, LookAt:= _
                xlPart, SearchOrder:=xlByColumns, SearchDirection:=xlNext, MatchCase:= _
                False, SearchFormat:=False).Activate
            rowNum(z) = ActiveCell.Row - 1
            Sheets(sheetnum + d + 1).Select
            Columns("A:M").Select
            Selection.Delete Shift:=xlToLeft
            Sheets(z).Select
            Columns("M:Z").Select
            Selection.Delete Shift:=xlToLeft
            d = d + 1
            z = z + 1
        Loop
        
        Do Until c = sheetnum + 1
            Sheets(1).Select
            Range("B2").Select
            sheetname = Worksheets(c).Name
            Cells(2, c).Formula = "=" & sheetname & "!A1"
            Cells(3, c).Select
            ActiveCell.Formula = "=AVERAGE('" & sheetname & "'!B2:" & Cells(rowNum(c), 2).Address & ")"
            Cells(4, c).Select
            ActiveCell.Formula = "=MEDIAN('" & sheetname & "'!B2:" & Cells(rowNum(c), 2).Address & ")"
            Cells(5, c).Select
            ActiveCell.Formula = "=SUM('" & sheetname & "'!B2:" & Cells(rowNum(c), 2).Address & ")"
            c = c + 1
        Loop
        ' save file
        ActiveWorkbook.Save
        ActiveWorkbook.Close SaveChanges:=True
    Next MyFilCount
    
    
    ' Reset screen updating and status bar...
    Application.ScreenUpdating = True
    Application.StatusBar = False
    Application.DisplayStatusBar = oldStatusBar
    ' Define user dialog parameters
    Msg = "File processing is now complete."
    style = vbOKOnly + vbInformation + vbDefaultButton1
    Title = "File Processing Status"
    ' Display user dialog
    Response = MsgBox(Msg, style, Title)
End If
Exit Function
'Error handler if no file(s) exist in directory...
FilesMissing:
' Define user dialog parameters
Msg = "There are no files located in the " & myDrive & ":\" & myLocation & " directory." & Chr(13) & _
"The program stopped and no updates were made."
style = vbOKOnly + vbCritical + vbDefaultButton1
Title = "Missing File(s)"
' Display user dialog
Response = MsgBox(Msg, style, Title)
' Reset screen updating and status bar...
Application.ScreenUpdating = True
Application.StatusBar = False
Application.DisplayStatusBar = oldStatusBar

End Function