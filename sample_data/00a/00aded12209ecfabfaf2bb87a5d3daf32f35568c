    def get_lot_values(self):

        products = self.env['product.product'].search([])

        values = {'product_id': products.ids[0]}
        return values

    @api.model
    def create(self, values):

        res = super(AccountAnalyticAccount, self).create(values)
        if not self._context.get('create_analytic_account_from_lot'):
            pass
        else:
            # if no_create_lot is false create a stock.production.lot
            if not self.no_create_lot:
                import pdb
                pdb.set_trace()
    
                lot_obj = self.env['stock.production.lot']
                lot_values = self.get_lot_values()
                lot_values['account_analytic_id'] = res.id
                # Create a production Lot
                lot = lot_obj.with_context(create_lot_from_analytic=True)\
                    .create(lot_values)

                res.write({'lot_id': lot})

        return res