int DP(vector<int>& lens, int d, int i, int s) {
    if(d >= m) return 0;
    if(i >= n) return 0;
    int &best = memo[d][i][s];
    if(best!=-1) return best;
    int ch1=0, ch2=0, ch3=0;
    if(lens[i] <= s)
        ch1 = DP(lens, d, i+1, s-lens[i]) + 1;
    ch2 = DP(lens, d, i+1, s);
    ch3 = DP(lens, d+1, i, t);
    best = max(ch1, max(ch2, ch3));
    return best;
}