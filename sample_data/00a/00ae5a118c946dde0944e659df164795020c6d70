#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int size,count=1;

typedef struct list
{
    char name[100];
    char id[100];
    double cgpa;
    int age;
    struct list *next;
} node;
node*start;
void insert(node*head,int size)
{

    if(count>size)
    {
        return;
    }
    char name[100],id[100], c,d;
    int p;
    double cgpa;
    int age;
    scanf("%c", &c);
    printf("Enter Student Name: ");
    fgets(name, 20, stdin);

    printf("Enter Student ID: ");
    fgets(id, 20, stdin);
    printf("Enter Student CGPA: ");
    scanf("%lf",&cgpa);
    printf("Enter Student Age: ");
    scanf("%d",&age);
    printf("\nSuccessful!!\n");
    while(head->next!=NULL)
    {
        head=head->next;
    }
    if(count==size)
    {
        head->next=(node*)malloc(sizeof(node));
        strcpy(head->next->name,name);
        strcpy(head->next->id,id);
        head->next->cgpa = cgpa;
        head->next->age = age;
        head->next->next = start;
        count++;
    }
    else
    {
        head->next=(node*)malloc(sizeof(node));
        strcpy(head->next->name,name);
        strcpy(head->next->id,id);
        head->next->cgpa=cgpa;
        head->next->age=age;
        head->next->next=NULL;
        count++;
    }
    return;
}
void display(node*head)
{
    int n=1;
    while(head->next!=start)
    {
        printf("\nStudent %d\n",n);
        printf("______________________________\n");
        printf("Name: %s",head->next->name);
        printf("ID: %s \n",head->next->id);
        printf("CGPA: %.2lf \n",head->next->cgpa);
        printf("Age: %d \n",head->next->age);
        head=head->next;
        n++;
    }
    return;
}
void search(node*head)
{
    char id[20],c;
    scanf("%c", &c);
    printf("ID: ");
    fgets(id, 20, stdin);
    while(head->next!=start)
    {
        if (strcmp(head->next->id,id)==0)
        {
            printf("Student ID Found\n\n");
            printf("Student Name: %s", head->next->name);
            printf("Student ID: %s", head->next->id);
            printf("Student CGPA: %.2lf\n", head->next->cgpa);
            printf("Student Age: %d\n", head->next->age);
            return;
        }
        head=head->next;
    }
    printf("Not Found\n");
    return;
}
void delet(node*head)
{
    int flag=0;
    char id[20],c;
    scanf("%c", &c);
    printf("ID: ");
    fgets(id, 20, stdin);
    while(head->next!=start)
    {
        if (strcmp(head->next->id,id)==0)
        {
            head->next=head->next->next;
            flag++;
            break;
        }
        head=head->next;
    }
    if(flag==0)
    {
        printf("ID Not Found\n");
    }
    return;
}
void update(node*head)
{
    char id[20],c;
    scanf("%c", &c);
    printf("ID: ");
    fgets(id, 20, stdin);
    int flag=0;
    double cgpa;
    int age;
    int i;
    while(head->next!=start)
    {
        if (strcmp(head->next->id,id)==0)
        {
            flag++;
            break;
        }
        head=head->next;
    }
    if(flag==0)
    {
        printf("ID Not Found\n");
        return;
    }
    printf("Enter Student CGPA: ");
    scanf("%lf",&cgpa);
    printf("Enter Student Age: ");
    scanf("%d",&age);
    printf("\nSuccessful!!\n");
    head->next->cgpa=cgpa;
    head->next->age=age;
    return;
}

int main()
{
    //freopen("Input.txt", "r", stdin);
    node*head=(node*)malloc(sizeof(node));
    start=head;
    head->next=NULL;

    printf("1.Insert\n2.Display\n3.Search\n4.Delete\n5.Update\nExit(0)\n\n");
    int x,age,pos,size;
    printf("Enter total student number: \n");
    scanf("%d", &size);
    while(1)
    {

        printf("Enter Your Choice: ");
        scanf("%d",&x);
        if(x==0)
            break;
        if(x==1)
        {
            insert(head,size);
        }
        if(x==2)
        {
            display(head);
        }
        if(x==3)
        {

            search(head);
        }
        if(x==4)
        {
            printf("Delete: ");
            delet(head);
        }
        if(x==5)
        {
            printf("Enter ID: ");
            update(head);
        }

    }
    return 0;
}