-- Lumber Tycoon 2 Gui Created by FrendleNeymarJR
--- Automatically Add players to Blacklist ---

Mouse = game.Players.LocalPlayer:GetMouse()
 
Client = game.ReplicatedStorage.Interaction.ClientSetListPlayer
players = game.Players
for i, v in pairs(players:GetPlayers()) do
	if v.Name ~= players.LocalPlayer.Name then
		Client:InvokeServer(players.LocalPlayer.BlacklistFolder, v, true)
	end
end
players.PlayerAdded:connect(function(plr)
	Client:InvokeServer(players.LocalPlayer.BlacklistFolder, plr, true)
end)

--- Fly ---
 
function fly()
	for i,v in pairs(script:GetChildren()) do
	pcall(function() v.Value = "" end)
			game:GetService("Debris"):AddItem(v,.1)
		end
   
		function weld(p0,p1,c0,c1,par)
			local w = Instance.new("Weld",p0 or par)
			w.Part0 = p0
			w.Part1 = p1
			w.C0 = c0 or CFrame.new()
			w.C1 = c1 or CFrame.new()
			return w
		end
   
		local motors = {}
   
		function motor(p0,p1,c0,c1,des,vel,par)
			local w = Instance.new("Motor6D",p0 or par)
			w.Part0 = p0
			w.Part1 = p1
			w.C0 = c0 or CFrame.new()
			w.C1 = c1 or CFrame.new()
			w.MaxVelocity = tonumber(vel) or .05
			w.DesiredAngle = tonumber(des) or 0
			return w
		end
   
		function lerp(a,b,c)
			return a+(b-a)*c
		end
   
		function clerp(c1,c2,al)
			local com1 = {c1.X,c1.Y,c1.Z,c1:toEulerAnglesXYZ()}
			local com2 = {c2.X,c2.Y,c2.Z,c2:toEulerAnglesXYZ()}
			for i,v in pairs(com1) do
				com1[i] = lerp(v,com2[i],al)
			end
			return CFrame.new(com1[1],com1[2],com1[3]) * CFrame.Angles(select(4,unpack(com1)))
		end
   
		function ccomplerp(c1,c2,al)
			local com1 = {c1:components()}
			local com2 = {c2:components()}
			for i,v in pairs(com1) do
				com1[i] = lerp(v,com2[i],al)
			end
			return CFrame.new(unpack(com1))
		end
   
		function tickwave(time,length,offset)
			return (math.abs((tick()+(offset or 0))%time-time/2)*2-time/2)/time/2*length
		end

		function invcol(c)
			c = c.Color
			return BrickColor.new(Color3.new(1-c.b,1-c.g,1-c.r))
		end
		local oc = oc or function(...) return ... end
		local plr = game.Players.LocalPlayer
		local char = plr.Character
		local tor = char.Torso
		local hum = char.Humanoid
		hum.PlatformStand = false
		pcall(function()
			char.Wings:Destroy()
		end)
		pcall(function()
			char.Angel:Destroy() -- hat
		end)
		local mod = Instance.new("Model",char)
		mod.Name = "Wings"
		local special = {
			[game.Players.LocalPlayer.Name] = {"Black","Bright red",.5,0,false,Color3.new(1,0,0),Color3.new(0,0,0)},
		}
		local topcolor = BrickColor.new("Really black")
		local feacolor = BrickColor.new("Black")
		local ptrans = 0
		local pref = 0
		local fire = true
		local fmcol = Color3.new()
		local fscol = Color3.new()
		local spec = special[plr.Name:lower()]
		if spec then
			topcolor,feacolor,ptrans,pref,fire,fmcol,fscol = spec[1] and BrickColor.new(spec[1]) or topcolor,spec[2] and BrickColor.new(spec[2]) or feacolor,spec[3],spec[4],spec[5],spec[6],spec[7]
		end
		local part = Instance.new("Part")
		part.FormFactor = "Custom"
		part.Size = Vector3.new(.2,.2,.2)
		part.TopSurface,part.BottomSurface = 0,0
		part.CanCollide = false
		part.BrickColor = BrickColor.new("Black")
		part.Transparency = ptrans
		part.Reflectance = pref
		local ef = Instance.new("Fire",fire and part or nil)
		ef.Size = .15
		ef.Color = BrickColor.new("Black").Color
		ef.SecondaryColor = BrickColor.new("Bright red").Color
		part:BreakJoints()
		function newpart()
			local clone = part:Clone()
			clone.Parent = mod
			clone:BreakJoints()
			return clone
		end
		local feath = newpart()
		feath.BrickColor = feacolor
		feath.Transparency = 0
		Instance.new("SpecialMesh",feath).MeshType = "Sphere"
		function newfeather()
			local clone = feath:Clone()
			clone.Parent = mod
			clone:BreakJoints()
			return clone
		end
		flying = false
		moving = false
		for i,v in pairs(tor:GetChildren()) do
			if v.ClassName:lower():match("body") then
				v:Destroy()
			end
		end
		local ctor = tor:Clone()
		ctor:ClearAllChildren()
		ctor.Name = "cTorso"
		ctor.Transparency = 1
		ctor.CanCollide = false
		ctor.FormFactor = "Custom"
		ctor.Size = Vector3.new(.2,.2,.2)
		ctor.Parent = mod
		weld(tor,ctor)
		local bg = Instance.new("BodyGyro",ctor)
		bg.maxTorque = Vector3.new()
		bg.P = 15000
		bg.D = 1000
		local bv = Instance.new("BodyVelocity",ctor)
		bv.maxForce = Vector3.new()
		bv.P = 15000
		vel = Vector3.new()
		cf = CFrame.new()
		flspd = 0
		keysdown = {}
		keypressed = {}
		ktime = {}
		descendtimer = 0
		jumptime = tick()
		hum.Jumping:connect(function()
			jumptime = tick()
		end)
		cam = workspace.CurrentCamera
		kd = plr:GetMouse().KeyDown:connect(oc(function(key)
			keysdown[key] = true
			keypressed[key] = true
			if key == "q" then
				descendtimer = tick()
			elseif key == " " and not hum.Jump then
				jumptime = tick()
			elseif (key == "a" or key == "d") and ktime[key] and tick()-ktime[key] < .3 and math.abs(reqrotx) < .3 then
				reqrotx = key == "a" and math.pi*2 or -math.pi*2
			end
			ktime[key] = tick()
		end))
   
		ku = plr:GetMouse().KeyUp:connect(function(key)
			keysdown[key] = false
			if key == " " then
				descendtimer = tick()
			end
		end)
		function mid(a,b,c)
			return math.max(a,math.min(b,c or -a))
		end
		function bn(a)
			return a and 1 or 0
		end
		function gm(tar)
			local m = 0
			for i,v in pairs(tar:GetChildren()) do
				if v:IsA("BasePart") then
					m = m + v:GetMass()
				end
				m = m + gm(v)
			end
			return m
		end
		reqrotx = 0
		local grav = 196.2
		local con
		con = game:GetService("RunService").Stepped:connect(oc(function()
			local obvel = tor.CFrame:vectorToObjectSpace(tor.Velocity)
			local sspd, uspd,fspd = obvel.X,obvel.Y,obvel.Z
			if flying then
				local lfldir = fldir
				fldir = cam.CoordinateFrame:vectorToWorldSpace(Vector3.new(bn(keysdown.d)-bn(keysdown.a),0,bn(keysdown.s)-bn(keysdown.w))).unit
				local lmoving = moving
				moving = fldir.magnitude > .1
				if lmoving and not moving then
					idledir = lfldir*Vector3.new(1,0,1)
					descendtimer = tick()
				end
				local dbomb = fldir.Y < -.6 or (moving and keysdown["1"])
				if moving and keysdown["0"] and lmoving then
					fldir = (Vector3.new(lfldir.X,math.min(fldir.Y,lfldir.Y+.01)-.1,lfldir.Z)+(fldir*Vector3.new(1,0,1))*.05).unit
				end
				local down = tor.CFrame:vectorToWorldSpace(Vector3.new(0,-1,0))
				local descending = (not moving and keysdown["q"] and not keysdown[" "])
				cf = ccomplerp(cf,CFrame.new(tor.Position,tor.Position+(not moving and idledir or fldir)),keysdown["0"] and .02 or .07)
				local gdown = not dbomb and cf.lookVector.Y < -.2 and tor.Velocity.unit.Y < .05
				hum.PlatformStand = true
				bg.maxTorque = Vector3.new(1,1,1)*9e5
				local rotvel = CFrame.new(Vector3.new(),tor.Velocity):toObjectSpace(CFrame.new(Vector3.new(),fldir)).lookVector
				bg.cframe = cf * CFrame.Angles(not moving and -.1 or -math.pi/2+.2,moving and mid(-2.5,rotvel.X/1.5) + reqrotx or 0,0)
				reqrotx = reqrotx - reqrotx/10
				bv.maxForce = Vector3.new(1,1,1)*9e4*.5
				local anioff =(bn(keysdown[" "])-bn(keysdown["q"]))/2
				local ani = tickwave(1.5-anioff,1)
				bv.velocity = bv.velocity:Lerp(Vector3.new(0,bn(not moving)*-ani*15+(descending and math.min(20,tick()-descendtimer)*-8 or bn(keysdown[" "])-bn(keysdown["q"]))*15,0)+vel,.6)
				vel = moving and cf.lookVector*flspd or Vector3.new()
				flspd = math.min(120,lerp(flspd,moving and (fldir.Y<0 and flspd+(-fldir.Y)*grav/60 or math.max(50,flspd-fldir.Y*grav/300)) or 60,.4))
				local hit,ray = workspace:FindPartOnRayWithIgnoreList(Ray.new(tor.Position,Vector3.new(0,-3.5+math.min(0,bv.velocity.y)/30,0)),{char})
				if hit and down.Y < -.85 and tick()-flystart > 1 then
					flying = false
					hum.PlatformStand = false
					tor.Velocity = Vector3.new()
				end
			else
				bg.maxTorque = Vector3.new()
				bv.maxForce = Vector3.new()
				local x,y,z = fspd/160,uspd/700,sspd/900
				if keypressed[" "] and not flying and (tick()-jumptime > .05 and (tick()-jumptime < 3 or hum.Jump)) then
					vel = Vector3.new(0,50,0)
					bv.velocity = vel
					idledir = cam.CoordinateFrame.lookVector*Vector3.new(1,0,1)
					cf = tor.CFrame * CFrame.Angles(-.01,0,0)
					tor.CFrame = cf
					bg.cframe = cf
					flystart = tick()
					flying = true
			end
		end
		keypressed = {}
	end))
end
fly()

---

Option = false
BTool = "Nothing"
WCollide = "Nothing"
LT2Info = "Nothing"
GreyStart = "Nothing"
MDown = false
afkactive = false
CustomLocationSet = false

-- Objects

local LT2GUI = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local MenuLeftFrame = Instance.new("Frame")
local LT2GUI2Frame = Instance.new("Frame")
local BringTree = Instance.new("TextButton")
local Waypoints = Instance.new("TextButton")
local SellFrame = Instance.new("Frame")
local SellWoodPlanks = Instance.new("TextButton")
local SellWood = Instance.new("TextButton")
local SellPlanks = Instance.new("TextButton")
local SellWoodTxt1 = Instance.new("TextLabel")
local SellPlanksTxt1 = Instance.new("TextLabel")
local Greywood = Instance.new("TextButton")
local GreywoodFrame = Instance.new("Frame")
local GreywoodHeader = Instance.new("TextLabel")
local GreywoodInfo = Instance.new("TextLabel")
local GreywoodStart = Instance.new("TextButton")
local StartFrameInfo = Instance.new("TextLabel")
local TPWood = Instance.new("TextButton")
local TPPlanks = Instance.new("TextButton")
local PlankFrame = Instance.new("Frame")
local ProcessedWoodList = Instance.new("ScrollingFrame")
local TpAllPlanks = Instance.new("TextButton")
local TpAllPlanksSpacer = Instance.new("TextLabel")
local TpAllPlanksTxt1 = Instance.new("TextLabel")
local GodMode = Instance.new("TextButton")
local GoldAxe = Instance.new("TextButton")
local GoldAxeInfo =