#include<bits/stdc++.h>
#define maxn (1<<17)
using namespace std;
int n,h[maxn],c[maxn],dp[maxn];
vector<pair<int,int> >lines;
int crs(pair<int,int> p1,pair<int,int> p2)
{
    int ret=(p2.second-p1.second)/(p1.first-p2.first);
    if((p2.second-p1.second)%(p1.first-p2.first)!=0)ret++;
    return ret;
}
bool check(int m,int e)
{
    if(m==lines.size()-1)return true;
    return crs(lines[m],lines[m+1])>=e&&crs(lines[m],lines[m-1])<=e;
}
int BS(int g)
{
    int left=0,right=lines.size(),mid,ans;
    while(left<=right)
    {
        mid=(left+right)>>1;
        if(check(mid,g)==true)
        {
            ans=mid;
            left=mid+1;
        }
        else right=mid-1;
    }
   return ans;
}
int main()
{
    scanf("%d",&n);
    for(int i=0; i<n; i++)scanf("%d",&h[i]);
    for(int i=0; i<n; i++)scanf("%d",&c[i]);
    dp[1]=h[1]*c[0];
    lines.push_back({c[0],0});
    lines.push_back({c[1],h[1]*c[0]});
    for(int i=2; i<n; i++)
    {
        int bs=BS(h[i]);
        dp[i]=c[bs]*h[i]+dp[bs];
        cout<<bs<<endl;
        pair<int,int>l1;
        l1={c[i],dp[i]};
        while(lines.size()>1&&crs(lines[lines.size()-1],lines[lines.size()-2])<crs(l1,lines[lines.size()-1]))lines.pop_back();
        lines.push_back(l1);
    }
    cout<<dp[n-1]<<endl;
    return 0;
}