#include "ReadWriter.h"
#include <random> //dłja randoma
//iostream, fstream wkłjuczjeny w ReadWriter.h
using namespace std;

//Możno sozdawat łjuboje kołiczjestwo łjubych wspomogatjełnych kłassow, struktur i mjetodow dłja rjeszjenija zadaczi.

//Njeobchodimo rjeałizowat ałgoritm bystroj sortirowki.
//W kaczjestwje opornogo ełjemjenta wybirat słuczajnyj

//BYŁI IZMJeNJeNY PARAMJeTRY FUNKCII PROSTO DŁJa UDOBSTWA
void quickSort(int *numbers, int left, int right)
{
    int i = left, j = right;

    //bjerjem po posłjednjemu
    int pivot = numbers[right];

    //iszczjem eł-ty nje na swoich mjestach i swapajem ich
    while (i <= j)
    {
        while (numbers[i] < pivot)
            ++i;
        while (numbers[j] > pivot)
            --j;

        if (i <= j)
        {
            swap (numbers[i], numbers[j]);
            ++i;
            --j;
        }

    }

    //djełajem granicy imjenno po i i j, cztob nje pjerjeprowjerjat kak oni stojat otnositjełno drug druga
    if (left < j)
        quickSort(numbers, left, j);
    if (right > i)
        quickSort(numbers, i, right);
}

//Nje udałjat i nje izmjenjat mjetod main bjez krajnjej njeobchodimosti.
//Njeobchodimo dobawit kommjentarii, jesłi wsje żje priszłos izmjenit mjetod main.
//!!! byłi izmjenjenija
int main()
{
    //Objekt dłja raboty s fajłami
    ReadWriter rw;

    int *brr = nullptr;
    int n;

    //Wwod iz fajła
    n = rw.readInt();

    brr = new int[n];
    rw.readArray(brr, n);

    //Zapusk sortirowki, otwjet w tom żje massiwje (brr)
    //izmjenjeno koł-wo wchodnych paramjetrow dłja udobstwa i adaptacii ałgoritma s sjeminara
    quickSort(brr, 0, n-1);


    //Zapis w fajł
    rw.writeArray(brr, n);

    //oswobożdajem pamjat
    delete[] brr;

    return 0;
}