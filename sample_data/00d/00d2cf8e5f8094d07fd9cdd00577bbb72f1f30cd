var config = {
    msg:                { type: 'noop', label: '-- Created By SellingScripts --' },
    baseBet:            { value: 10000, type: 'balance', label: 'Base Bet' },
    crashTarget:        { value: 5, type: 'multiplier', label: 'Cash Out' },
    multiOnloss:        { value: 1.25, type: 'multiplier', label: 'Increase on Loss - First Cash Out' },
    playafterXgames:    { value: 5, type: 'multiplier', label: 'Only Play After X Games' },
    underXgames:        { value: 5, type: 'multiplier', label: 'Only Play After X Games UNDER this multiplier' },
    maxLosestreak1:      { value: 2, type: 'text', label: 'Number of Reds Before Pausing' },
    maxSkipAfterGreen1:  { value: 2, type: 'text', label: 'Number of Greens Before Resuming' },
    secondCrashTarget:  { value: 3, type: 'multiplier', label: 'New Cash Out After Resuming' },
    secondMultiOnLoss1:  { value: 1.6, type: 'text', label: 'Increase on Loss - Second Cash Out' },
};
 
log('Script is running..');
log('Welcome! Your balance is ' + userInfo.balance / 100 + ' bits!');
log('Good Luck =)');
 
 
 
var maxLosestreak = parseFloat(config.maxLosestreak1.value);
var maxSkipAfterGreen = parseFloat(config.maxSkipAfterGreen1.value);
var secondMultiOnLoss = parseFloat(config.secondMultiOnLoss1.value);
 
 
 
 
var lastBet;
 
var losestreak = 0;
var skipAfterGreen = 0;
var roundCounter = 0;
 
var isLosestreak = false;
var isAfterGreen = false;
 
 
var currentBet = 0;
var Xgames = 0;
 
 
 
//Events to follow
engine.on('GAME_STARTING', ongamestart);
engine.on('GAME_ENDED', ongameend);
 
//Game Starting Event
function ongamestart() {
 if (isAfterGreen) {
        engine.bet(roundBit(currentBet), config.secondCrashTarget.value);
            skipAfterGreen = 0;
        log("Betting: " + roundBit(currentBet) / 100 + " bits");
        log("Gay 1");
    } else {
        engine.bet(roundBit(currentBet), config.crashTarget.value);
        log("Betting: " + roundBit(currentBet) / 100 + " bits");
        log("Gay 2");
    }
}
 
//Game Ending Event
function ongameend() {
    var lastGame = engine.history.first()
 
    // Xgames counter
    if (lastGame.bust < config.underXgames.value) {
        Xgames++;
    } else {
        Xgames = 0;
    }
 
    // Did we bet last round?
    if (lastGame.wager) {
        //We Won
        if (lastGame.cashedAt) {
            currentBet = 0;
            lastBet = 0;
            isAfterGreen = false;
            losestreak = 0;
            log("We won, cashed at: " + lastGame.cashedAt + "x");
            log("Gay 5");
        } else {
            losestreak++;
            log("We lost!");
            log("Gay 6");
            if (losestreak >= maxLosestreak) {
                if (isLosestreak === false) {
                    lastBet = currentBet *= config.secondMultiOnloss.value;
log("First gay, " + lastBet);
                    log("Gay 7");
                }
                currentBet = 0;
                isLosestreak = true;
                log("We will pause. Maximum of " + maxLosestreak + " losses reached.");
                log("Gay 8");
            } else {
                if (isAfterGreen) {
                    currentBet *= config.secondMultiOnloss.value;
                    isLosestreak = false;
                    log('We lost. Betting', roundBit(currentBet) / 100, 'next round');
                    log("Gay 9");
                } else {
                    currentBet *= config.multiOnloss.value;
                    isLosestreak = false;
                    log('We lost. Betting', roundBit(currentBet) / 100, 'next round');
                    log("Gay 10");
                }
            }
        }
    } else {
        if (isLosestreak === true && roundCounter !== 0) {
            if (lastGame.bust >= 2) {
                skipAfterGreen++;
                log("Gay 12");
                losestreak = 0;
                log('The red streak ended, waiting for ' + maxSkipAfterGreen + ' greens before betting. ' + skipAfterGreen);
                  if (skipAfterGreen >= maxSkipAfterGreen) {
            currentBet = lastBet;
            losestreak = 0;
            isAfterGreen = true;
log("Yo Gay" + currentBet)
log("Gay Gay" + skipAfterGreen + maxSkipAfterGreen);
            log("We will resume. There has been " + config.maxSkipAfterGreen.value + " greens.");
            log("Gay 13");
        }
            }
        } else {
            if (Xgames >= config.playafterXgames.value) {
                currentBet = config.baseBet.value;
                log('X Games target of', config.playafterXgames.value, 'has been met. Next round we will bet. ');
                isAfterGreen = false;
                losestreak = 0;
                log("Gay 14");
            } else {
                currentBet = 0;
                log('X Games count', Xgames);
                losestreak = 0;
                log("Gay 15");
            }
        }
    }
    roundCounter++;
}
 
//Math Rounding Function
function roundBit(bet) {
    return Math.round(bet / 100) * 100;
}