## app/models/inventory.rb [ruby_on_rails]
class Inventory < ActiveRecord::Base
	self.primary_key = "InvtID"

	def self.search(search, page)
		paginate :per_page => 5,
			:page => page,
			:conditions => ['INVTID like ?', "%#{search}%"]
	end

end

## app/views/inventory/index.html.erb [html_rails]
<h1>Inventory#search</h1>
<h2><%=@query%></h2>
Lookup by InvtID is only supported as of now.
<% form_tag request.path, :method => 'get' do %>
  <% content_tag :label do %>
    Search term:
    <%= text_field_tag :search, params[:search] %>
  <% end %>
<% end %>

<% unless @results.blank? -%>
	<% indices=['InvtID', 'Descr', 'User1', 'MaterialType', 'StkBasePrc'] %>
	<table border=1>
		<tr>
			<% indices.each {|i| %><th><%=i%></th>
			<% } %>
		</tr>
		<% for item in @results %>
			<tr>
				<% indices.each {|i| %><td><%=item.attributes.fetch(i)%></td>
				<% } %>
				<td><%= link_to "Details", item["InvtID"] %></td>
			</tr>
		<% end %>
	</table>
        <%= will_paginate @results %>
<% end %>

## app/controllers/inventory_controller.rb [ruby_on_rails]
class InventoryController < ApplicationController

	def index
		unless params[:search].blank?
			@query = params[:search]
			@results = Inventory.search(params[:search], params[:page])
		else
			@query = nil
			@results = nil
		end
	end

	def show
		@item = Inventory.find(params[:id])
	end

end