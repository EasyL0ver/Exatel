async def start_app(event):
    command_raw = 'ping 127.0.0.1'
    command = shlex.split(command_raw, posix="win" not in sys.platform)
    create = asyncio.create_subprocess_exec(*command, stdout=asyncio.subprocess.PIPE)
    proc = await create

    while True:
        data = await proc.stdout.readline()
        line = data.decode('ascii').rstrip()
        if line == 'Ping statistics for 127.0.0.1:':
            break
    event.set()


def runner_worker(runner_loop):
    asyncio.set_event_loop(runner_loop)
    runner_loop.run_forever()

if sys.platform == "win32":
    runner_loop = asyncio.ProactorEventLoop()

event = Event()
t = Thread(target=runner_worker, args=(runner_loop,))
t.start()

f = functools.partial(start_app, event)
runner_loop.call_soon_threadsafe(f)

print('waiting for externall app to start')
event.wait(timeout=60)
print('reasuming application')
time.sleep(2)

print('ending...')
	
RuntimeWarning: coroutine 'start_app' was never awaited
  self._callback(*self._args)