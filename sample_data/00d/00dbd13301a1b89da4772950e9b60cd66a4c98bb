"""Global And Local Alignment."""
import numpy as np
import sys


def NWAlignment(Seq1, Seq2, SubMatrix, GapPenalty):
    """Return Needleman-Wunch Alignment score and string."""
    n = len(Seq1)
    m = len(Seq2)
    dpTable = np.zeros((n+1, m+1), dtype=int)
    pointerTable = np.zeros((n+1, m+1), dtype=int)
    for i in range(n+1):
        dpTable[i][0] = i*GapPenalty
    for j in range(m+1):
        dpTable[0][j] = j*GapPenalty

    for i, s1 in enumerate(Seq1):
        for j, s2 in enumerate(Seq2):
            diag = dpTable[i][j] + SubMatrix[(s1, s2)]
            down = dpTable[i][j+1] + gap
            right = dpTable[i+1][j] + gap
            dpTable[i+1][j+1] = max(diag, down, right)
            if (dpTable[i+1][j+1] == diag):
                pointerTable[i+1][j+1] = 3
            elif (dpTable[i+1][j+1] == down):
                pointerTable[i+1][j+1] = 2
            elif (dpTable[i+1][j+1] == right):
                pointerTable[i+1][j+1] = 1

    alSeq1 = ""
    alSeq2 = ""
    alSym = ""
    i = n
    j = m
    score = dpTable[n][m]
    while i > 0 and j > 0:
        if pointerTable[i][j] == 3:
            alSeq1 += seq1[i-1]
            alSeq2 += seq2[j-1]
            i -= 1
            j -= 1
        elif pointerTable[i][j] == 1:
            alSeq1 += '-'
            alSeq2 += seq2[j-1]
            j -= 1
        elif pointerTable[i][j] == 2:
            alSeq1 += seq1[i-1]
            alSeq2 += '-'
            i -= 1

    while i > 0:
        alSeq1 += seq1[i-1]
        alSeq2 += '-'
        i -= 1

    while j > 0:
        alSeq1 += '-'
        alSeq2 += seq2[j-1]
        j -= 1

    alSeq2 = alSeq2[::-1]
    alSeq1 = alSeq1[::-1]

    for i in range(len(alSeq1)):
        alSym += "|" if alSeq1[i] == alSeq2[i] else " "

    return (alSeq1, alSym, alSeq2), score


if __name__ == "__main__":
    seq1 = sys.argv[1]
    seq2 = sys.argv[2]
    mat = {("A", "A"): 3, ("A", "T"): -3, ("A", "C"): -3, ("A", "G"): -3,
           ("T", "A"): -3, ("T", "T"): 3, ("T", "C"): -3, ("T", "G"): -3,
           ("C", "A"): -3, ("C", "T"): -3, ("C", "C"): 3, ("C", "G"): -3,
           ("G", "A"): -3, ("G", "T"): -3, ("G", "C"): -3, ("G", "G"): 3}

    gap = -2

    alignRes, alignScore = NWAlignment(seq1, seq2, mat, gap)
    print "Global Alignment Result:"
    print alignRes[0]
    print alignRes[1]
    print alignRes[2]
print "Global Alignment Score: ", alignScore