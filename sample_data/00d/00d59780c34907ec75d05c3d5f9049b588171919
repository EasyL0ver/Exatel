require 'hpricot'
require 'net/http'
require 'uri'

class GagRipper
  attr_reader :count

  def initialize(photo_count = 100)
    @count = photo_count
    @_internal_counter = 0

    @nodes = []
    @cookies = nil
  end

  def reset
    puts 'Resetting state...'
    @nodes = []
    @_internal_counter = 0
    @_url_state = nil
  end

  def fetch(url = '9gag.com')
    @_url_state ||= url
    @_get_state ||= '/'
    retries = 0
    begin
      @http_session ||= Net::HTTP.start(@_url_state)

      @page_structure = Hpricot(@http_session.get(@_get_state).response.body)
    rescue 
      puts $!
      exit(-1) if retries >= 5
      
      retries += 1
      puts "Retrying (##{retries})..."
      retry
    end

    puts "Visiting #{@_url_state}..."

    @nodes += @page_structure.search('.img-wrap img').map {
      |e|
      @_internal_counter += 1
      puts "Fetched #{e['src']} (#{e['alt']})..."
      { url: e['src'], title: e['alt'] }
    }

    if @_internal_counter < @count
      puts "Fetching completed. #{@_internal_counter} photos fetched,
        #{@count - @_internal_counter} to go. Following next link..."
      @_get_state = @page_structure.at('#more_button')['href']
      fetch
    else
      @nodes = @nodes.take(@count) if @_internal_counter > @count

      puts "ALL PHOTOS SUCCESSFULLY FETCHED!"
    end
  end
end