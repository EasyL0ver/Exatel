/*
  Lesson 4 - Functions (subroutines)
  
  This is a very simple expansion on the previous lesson.

  If you think right back to lesson 1, I explained how "int main() {" is a function
  declaration for a function named "main" that accepts no arguments but returns an
  integer
  
  In this lesson I'll explain how to convert the code from the last lesson into a
  function of it's own so that it can be called and used over and over again.
*/
#include <stdio.h>

int main() {
	/*
	  Previously in main we had code that did one specific task, ask the user for
	  a number. That specific task is a unit of work (part of a task or block of code)
	  which makes it really easy to convert it into a function.
	  
	  For the sake of demonstration we'll write a small program that adds two
	  numbers together.
	*/
	int value;
	
	/*
	  This next statement replaces all that asking for number stuff "enter a value"
	  from lesson 3
	*/
	value = askForNumber();
	/*
	  That was easy, wasn't it :)
	  
	  If you're wondering where askForNumber() comes from, it's a function declaired
	  a little further down the file it looks like "int askForNumber() {"
	  
	  Now we're going to call that function a second time to get another number to
	  add to the first one
	*/
	value = value + askForNumber();
	/*
	  So little work to add two numbers together isn't it?
	  
	  A longer version of this code is
	  int value1;
	  int value2;
	  int sum;

	  value1 = askForNumber();
	  value2 = askForNumber();
	  sum = value1 + value2
	  
	  But knowing the shorter version is useful because you are recycling the 'value'
	  variable you can ask for more numbers an add to it over and over again.
	*/
	value += askForNumber();
	/*
	  Oh, that doesn't look right does it?
	  But it is, it's a compound operator called "Addition assignment"
	  
	  What it is is shorthand for "value = value +" so any time you see x+=y
	  it means you're adding y to x just as if you were x = x + y
	  
	  Now we print the value out, because all programs should be useful :D
	*/
	printf("Result: %d\n", value);
	
	return 0;
}

/*
  This is the askForNumber function declaration, it is wrapped around the block of
  code from the last lesson that asks for a number and converts it to an integer
*/
int askForNumber() {
	/*
	  So to recap that's made up of
	  
	  int          - Tell the compiler that this function returns an integer/number
	  askForNumber - The name for this function, it is a unique individual just like
	    you so it needs a name, it's a good idea to make this name meaningful.
	  ()           - this function accepts no arguments
	  {            - begin the block of code
	 
	  the rest of the code is almost identical to int main() from the last lesson except
	  instead of printing the value out we return it so the code calling this function
	  gets something to play with.
	*/
	char line[50];
	int value;

	printf("Enter a value: ");
	fgets(line, 50, stdin);
	sscanf(line, "%d", &value);
	
	/*
	  This is where we used to printf the value out to console, lets not do that
	  lets give it back to the caller
	*/
	
	return value;
}