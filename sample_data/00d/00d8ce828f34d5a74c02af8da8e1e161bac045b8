#include <iostream>
using namespace std;

class Gauss
{
private:
    double **tab;
    double *wyniki;
    int n; // rozmiar
    int i; //do iteracji
    int j; //do iteracji
    int k; //to po prostu n-1
    int m; //przy obliczaniu
    double iloraz;
public:
    Gauss(int nn=0)
    {
        n=nn;
        tab = new double *[n];
        for(i=0;i<n;i++)
        {
            tab[i] = new double[n];
        }
        wyniki = new double[n];
        j=0;
        k=nn-1;
        iloraz=0;
    }
    ~Gauss()
    {
        for(int i=0;i<n;i++)
		delete [] tab[i];
		delete [] *tab;
		delete [] wyniki;
		n=0; i=0; j=0; k=0; m=0; iloraz=0;
    }
    void wczytaj();
    void wyswietl();
    void Oblicz();
    void Wynik();
};
void Gauss::wczytaj()
{
    for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
        {
            cout<<"Wiersz "<<i<<" X"<<j<<" ";
		cin>>tab[i][j];
        }
             cout<<"Wiersz "<<i<<" Wynik "<<j<<" ";
             cin>>wyniki[i];
	}
}
void Gauss::wyswietl()
{
    for(int i=0;i<n;i++)
	{
	    cout<<"|";
		for(int j=0;j<n;j++)
        {
		cout<<tab[i][j]<<"\t";
        }
        cout<<"|";
        cout<<wyniki[i]<<"|";
        cout<<"\n";
	}
}
void Gauss::Oblicz()
{
    for(m=0;m<k;m++) //wiersz podstawa
    {
    for(i=m+1;i<n;i++) //wiersz obliczany
    {
         iloraz=tab[i][m]/tab[m][m];
        for(j=0;j<n;j++) //kolumny
        {
            tab[i][j]=tab[i][j]-iloraz*tab[m][j];
        }
        wyniki[i]=wyniki[i]-iloraz*wyniki[m];
    }}
    wyswietl(); // wyswietlanie macierzy trojkatnej dolnej
}
void Gauss::Wynik()
{
    for(m=k;m>0;m--) //wyniki liczymy jak macierz trojkatna dolna tylko ze od konca
    {
        for(i=m-1;i>-1;i--) //wiersz obliczany tym razem od góry w dół
    {
         iloraz=tab[i][m]/tab[m][m];
         for(j=0;j<n;j++) //kolumny
        {
            tab[i][j]=tab[i][j]-iloraz*tab[m][j];
        }
        wyniki[i]=wyniki[i]-iloraz*wyniki[m];
    }
    }
    for(i=0;i<n;i++)
    {
        cout<<"X"<<i<<" = "<<wyniki[i]/tab[i][i]<<"\t";
    }
}
int main()
{
    Gauss a(4);
    a.wczytaj();
    a.wyswietl();
    a.Oblicz();
    cout<<"\n";
    a.Wynik();
    return 0;
}