from numpy import *
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from matplotlib import cm
 
h = 0.04 # шаг
tau = 0.03 # шаг по времени
begin_t = 0 # начало по времени
end_t = 1 # конец по времени
begin_x = 0 # начало по х
end_x = pi / 2 # конец по х

H, T = meshgrid(arange(begin_x, end_x, h), arange(begin_t, end_t, tau))

yavn_s = [[exp(-i) * cos(i) for i in arange(begin_x, end_x, h)]]
size = len(yavn_s[0])
yavn_s.append([-exp(-i) * cos(i) * tau for i in arange(begin_x, end_x, h)])
for i in range(len(yavn_s[1])):
    yavn_s[1][i] += yavn_s[0][i]

#0 и 1 слой заполнены, поэтому переменные    
t = tau
temp = 1

grid = math.ceil((end_t - t) / tau) # задание размеров сетки
t += tau
for i in range(1, grid):
    yavn_s.append([0] * size)
    for j in range(1, size - 1):
        yavn_s[temp + 1][j] = (-2 * (yavn_s[temp][j] - yavn_s[temp - 1][j]) / tau) * tau ** 2 + 2 * yavn_s[temp][j] - \
                            yavn_s[temp - 1][j] + (2 * (yavn_s[temp][j + 1] - yavn_s[temp][j]) / h) * tau ** 2 + tau ** 2 * (
                                        yavn_s[temp][j + 1] - 2 * yavn_s[temp][j] + yavn_s[temp][j - 1]) / (h ** 2) - 3 * \
                            yavn_s[temp][j] * tau ** 2
    yavn_s[temp + 1][0] = exp(-t) * cos(2 * t)
    yavn_s[temp + 1][size - 1] = 0
    print(exp(-t) * cos(2 * t))
    t += tau
    temp += 1

#0 и 1 слой заполнены, поэтому переменные 
temp = 1
t = tau*2

neyavn_s = [[exp(-i) * cos(i) for i in arange(begin_x, end_x, h)]]
neyavn_s.append([-exp(-i) * cos(i) * tau + tau**2*exp(-i)*sin(i) for i in arange(begin_x, end_x, h)])
for i in range(len(neyavn_s[1])):
    neyavn_s[1][i] += neyavn_s[0][i]
for k in range(1, grid):
    l = 1
    matrx = [[1, 0] + [0 for i in range(size - 2)]]
    b = [exp(-t) * cos(2*t)]
    for i in range(size - 2):
        matrx += [[0 for k in range(size)]]
        matrx[l][i] = tau**2/h**2 - tau**2/h
        matrx[l][i + 1] = -1 - tau - 2*tau**2/h**2 - 3*tau**2
        matrx[l][i + 2] = tau**2/h**2 + tau**2/h
        b += [neyavn_s[temp - 1][i + 1]*(1 - tau) - neyavn_s[temp][i + 1]*2]
        l += 1
    matrx += [[0 for i in range(size - 2)] + [1, -1]]
    b += [0]
    neyavn_s.append(list(linalg.solve(matrx, b)))
    temp += 1
    t += tau
 

# Построение графиков

figure1 = plt.figure("Явная схема")
axes1 = Axes3D(figure1)
axes1.view_init(30, 60)
axes1.plot_surface(H, T, array(yavn_s), cmap=cm.jet)
plt.show
 
figure2 = plt.figure("Неявная схема")
axes2 = Axes3D(figure2)
axes2.view_init(30, 60)
axes2.plot_surface(H, T, array(neyavn_s), cmap=cm.jet)
plt.show()
 
real = exp(-T - H) * cos(H) * cos(2 * T)

k = yavn_s
figure3 = plt.figure("Настоящая")
axes3 = Axes3D(figure3)
axes3.view_init(30, 60)
axes3.plot_surface(H, T, array(k), cmap=cm.jet)
plt.show()


# Вывод погрешностей

print("Погрешность для явной схемы: ")
for i in range(len(real)):
    for j in range(len(real[i])):
        print('{0:.4f}'.format(real[i][j] - yavn_s[i][j]), end=' ')
    print()

print("Погрешность для неявной схемы: ")
for i in range(len(real)):
    for j in range(len(real[i])):
        print('{0:.4f}'.format(neyavn_s[i][j]), end=' ')
    print()