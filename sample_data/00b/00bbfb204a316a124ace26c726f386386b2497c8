funciÃ³n famakin_full_adder
 
fin = fopen ( 'FAMAKIN_FULL_ADDER_INPUT.txt' , 'w' ) ;
fout2 = fopen ( 'FAMAKIN_2STAGE_ADDER_OUTPUT.txt' , 'w' ) ;
fout4 = fopen ( 'FAMAKIN_4STAGE_ADDER_OUTPUT.txt' , 'w' ) ;
 
fprintf ( fin, '% s \ r \ n' , 'XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX X X' ) ;
 
fprintf ( fout2, '% s \ r \ n' , 'XXXXXXXXXXXXXXXX XXX' ) ;
fprintf ( fout2, '% s \ r \ n' , 'XXXXXXXXXXXXXXXX XXX' ) ;
fprintf ( fout4, '% s \ r \ n' , 'XXXXXXXXXXXXXXXX XXX' ) ;
fprintf ( fout4, '% s \ r \ n' , 'XXXXXXXXXXXXXXXX XXX' ) ;
fprintf ( fout4, '% s \ r \ n' , 'XXXXXXXXXXXXXXXX XXX' ) ;
fprintf ( fout4, '% s \ r \ n' , 'XXXXXXXXXXXXXXXX XXX' ) ;
 
para j = 0 : 3
    a = dec2bin ( 2 , 16 ) ;
    b = dec2bin ( 5 , 16 ) ;
    suma = dec2bin ( 0 , 16 ) ;
   
    fprintf ( fin, '% s \ r \ n' , [ a '' b '' '1' '' '' ) ] ;
    fprintf ( fout2, '% s \ r \ n' ,   [ suma '' '000' ] ) ;
    fprintf ( fout4, '% s \ r \ n' ,   [ suma '' '000' ] ) ;
fin
 
last_out = 0 ;
last_flag = '000' ;
 
para k = 4 : 5
    a = dec2bin ( 2 , 16 ) ;
    b = dec2bin ( 5 , 16 ) ;
    habilitar = mod ( k, 2 ) ;
    si habilitar == 0
        suma = dec2bin ( last_out, 16 ) ;
        flag = last_flag;
    elseif habilitar == 1
        suma = dec2bin ( 7 , 16 ) ;
        last_out = bin2dec ( suma ) ;
        flag = strcat ( a ( 1 ) , b ( 1 ) , suma ( 1 ) ) ;
        last_flag = flag ;
    fin
    fprintf ( fin, '% s \ r \ n' , [ a '' b '' '0' '' dec2bin ( habilitar, 1 ) ] ) ;
    fprintf ( fout2, '% s \ r \ n' ,   [ suma '' flag ] ) ;
    fprintf ( fout4, '% s \ r \ n' ,   [ suma '' flag ] ) ;
fin
 
% de restablecimiento establecido a 0 para 4 ciclos de reloj
RESET = '0' ;
EN = '1' ;
para i = 0 : 65535
    a = dec2bin ( i , 16 ) ;
    b = dec2bin ( i , 16 ) ;
   
    suma = dec2bin ( 2 * i , 16 ) ;
    si longitud ( suma ) > 16
        out = suma ( longitud ( suma ) - 15 : longitud ( suma ) ) ;
        flag = strcat ( a ( 1 ) , b ( 1 ) , out ( 1 ) ) ;
    longitud elseif ( suma ) == 16
        out = suma ;
        flag = strcat ( a ( 1 ) , b ( 1 ) , out ( 1 ) ) ;
    fin
    fprintf ( fin, '% s \ r \ n' , [ a '' b '' RESET '' EN '' ] ) ;
    fprintf ( fout2, '% s \ r \ n' ,   [ out '' flag ] ) ;
    fprintf ( fout4, '% s \ r \ n' ,   [ out '' flag ] ) ;
fin
fprintf ( fin, '% s \ r \ n' , '.' ) ;
fprintf ( fout2, '% s \ r \ n' , '.' ) ;
fprintf ( fout4, '% s \ r \ n' , '.' ) ;
 
fclose ( aleta ) ;
fclose ( fout2 ) ;
fclose ( fout4 ) ;
 
fin