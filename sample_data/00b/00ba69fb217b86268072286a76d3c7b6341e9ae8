public class LogisticBelt implements Runnable {
	private FactoryBelt factory;
	private boolean status;
	private int number;

	public void run() {
		while (true) {
			while (factory.getFacBottle() == 0 || !status) {
				synchronized (factory) {
					try {
						factory.wait();
					} catch (InterruptedException e) {

					}
				}
			}
			factory.setFacBottle(factory.getFacBottle() - 1);
			int[] tmp = factory.getLogisticBottle();
			tmp[number]++;
			factory.setLogisticBottle(tmp);
			factory.update();
			try {
				Thread.sleep(150);
			} catch (InterruptedException e1) {

			}
			if (status && factory.getFacBottle() > 0)
				synchronized (factory) {
					factory.notifyAll();
				}

		}
	}

	public LogisticBelt(int i, FactoryBelt fb) {
		setFactory(fb);
		number = i;
		status = fb.getStatus()[i];
	}

	public FactoryBelt getFactory() {
		return factory;
	}

	public void setFactory(FactoryBelt factory) {
		this.factory = factory;
	}

	public boolean isStatus() {
		return status;
	}

	public void setStatus(boolean status) {
		this.status = status;
	}

}