// lowest common ancestor (binary tree)
// source -> https://www.youtube.com/watch?v=13m9ZCB8gjw
#include<bits/stdc++.h>
using namespace std;
vector<int> v[100001];
bool visit[100001];

int dfs(int x, int y, int p)
{
    visit[p] = true;
    if(p == x)
        return x;
    if(p == y)
        return y;
    if(v[p].size() == 1 && visit[v[p][0]] == true)
        return 0;
    vector<int> v1;
    for(auto it: v[p])
    {
        if(!visit[it])
        {
            v1.push_back(dfs(x, y, it));
        }
    }
    for(auto it: v1)
    {
        if(v1.size() == 1)
            return v1[0];
        if(v1[0] > 0 && v1[1] > 0)
            return p;
        return max(v1[0], v1[1]);
    }
}

int main()
{
    int n, x, y;
    cin >> n;
    for(int i=0; i<n-1; i++)
    {
        cin >> x >> y;
        v[x].push_back(y);
        v[y].push_back(x);
    }
    cin >> x >> y;
    cout << dfs(x, y, 1);
}