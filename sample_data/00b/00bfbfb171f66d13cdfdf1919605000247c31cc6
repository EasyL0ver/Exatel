Today
=>  Complete Slack topics
=>  Complete Google hosting topics

=> React interview question + lifecycle
=> what is redux

https://medium.freecodecamp.org/the-most-important-things-you-need-to-know-for-a-programming-interview-3429ac2454b
https://hackdesign.org/

Rails State machine

https://blog.codeship.com/how-to-use-rails-active-job/=> Read
~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~


https://kb.cscc.edu/article/create-shortcut-to-open-a-url-with-a-specific-browser-85.html

https://mobilemarketingwatch.com/how-to-stop-unwanted-text-messages-17175/
=>  Complete section 11 and 12
=>  https://developers.google.com/search/mobile-sites/mobile-first-indexing=>
=>  One Post
=>  Git interview question. Make file

~~~~~~~~~~~~~~~~~~~~~~~~~
https://gist.github.com/DrewML/78621085807671a3098c67ad32a2a750
https://devathon.slack.com/customize/loading

https://www.bustle.com/articles/106348-14-hidden-slack-features-you-definitely-need-to-know-because-its-much-more-than-just-an


http://www.dsalgo.com/2013/03/find-local-minima-in-array.html
~~~~~~~~~~~~~~~~~~~~~~~~~
We compare middle element with its neighbors. If middle element is not greater than any of its neighbors, then we return it. If the middle element is greater than its left neighbor, then there is always a local minima in left half (Why? take few examples). If the middle element is greater than its right neighbor, then there is always a local minima in right half (due to same reason as left half).

Say you have an array A of N positive integers. Design an algorithm to find a number 'p' such that there are exactly 'p' elements in A that are greater than 'p'. Feel free to use extra space if needed. Optimize for time complexity.

Note:
- if no such 'p' exists, return -1.
- 'p' need not be from the array.


Can you design a load balancer to allocate requests from your website to corresponding servers. Below are key details:

1) You have 10 servers running your backend code to manage the payload
2) You have control over only your load balancer
3) The sessions should be sticky. i.e, once a new user comes to your site. is assigned a server say S1. Further requests from the user should be sent to only S1.
4) Your solution should irrespective of backend framework or frontend framework. (i.e dont assume any process to be offloaded to backend or frontend frameworks)
~~~~~~~~~~~~~~~~~~~~~~~~~

#be happy

Read=>  http://get-that-job-at-google.blogspot.in/


https://www.youtube.com/watch?v=YEI1wnuoFmY



Freshdesk & flock software worked on ruby on rails