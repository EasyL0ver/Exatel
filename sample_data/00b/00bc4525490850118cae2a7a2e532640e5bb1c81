set opt(title) zero
set opt(stop) 100
set opt(ecn) 0
set opt(type) umts 
set opt(bwUL) 0

set opt(bwDL) 0

set opt(propUL) 0 
set opt(propDL) 0 
set opt(secondDelay) 55
set opt(maxth) 0

set opt(queue) DT
set opt(qsize) 0
set opt(flows) 1

set opt(shortflows) 0
set opt(webers) 0

set opt(window) 30 
set opt(smallpkt) 10 
set opt(web) 2

set opt(pagesize) 10 
set opt(objSize) 60 
set opt(shape) 1.05 

set opt(interpage) 1 

set opt(quiet) 0

set opt(wrap) 90 
set opt(srcTrace) is 
set opt(dstTrace) bs 
set opt(umtsbuf) 20
set bwDL(umts) 384000
set bwUL(umts) 64000
set propDL(umts) .150
set propUL(umts) .150

set buf(umts) 20
proc cell_topo {} {
global ns nodes qm
$ns duplex-link $nodes(bs) $nodes(ms) 1 1 $qm
$ns duplex-link $nodes(lp) $nodes(ms) 3Mbps 10ms DropTail
$ns duplex-link $nodes(bs) $nodes(is) 3Mbps 50ms DropTail
puts "cell topology"
}
proc set_link_params {t} {
global ns nodes bwUL bwDL propUL propDL buf
$ns bandwidth $nodes(bs) $nodes(ms) $bwDL($t) simplex
$ns bandwidth $nodes(ms) $nodes(bs) $bwUL($t) simplex
$ns delay $nodes(bs) $nodes(ms) $propDL($t) simplex
$ns delay $nodes(ms) $nodes(bs) $propDL($t) simplex
$ns queue-limit $nodes(bs) $nodes(ms) $buf($t)
$ns queue-limit $nodes(ms) $nodes(bs) $buf($t)
}
if {$opt(queue) == "DT"} {
set qm DropTail
}
if {$opt(queue) == "RED"} {
set qm RED
}
set tcpTick_ 0.01
set pktsize 1460

Agent/TCP set tcpTick_ $tcpTick_
set out $opt(title)
proc stop {} {
global nodes opt
set wrap $opt(wrap)
set sid [$nodes($opt(srcTrace)) id]
set did [$nodes($opt(dstTrace)) id]
if {$opt(srcTrace) == "bs"} {
set a "-a umts.tr"
} else {
set a "umts.tr"
}
set GETRC "/home/student/ns2/getrc"
set RAW2XG "/home/student/ns2/raw2xg"
exec $GETRC -s $sid -d $did -f 0 umts.tr | \
$RAW2XG -s 0.01 -m $wrap -r > plot.xgr
exec $GETRC -s $did -d $sid -f 0 umts.tr | \
$RAW2XG -a -s 0.01 -m $wrap >> plot.xgr
exec $GETRC -s $sid -d $did -f 1 umts.tr | \
$RAW2XG -s 0.01 -m $wrap -r >> plot.xgr
exec $GETRC -s $did -d $sid -f 1 umts.tr | \
$RAW2XG -s 0.01 -m $wrap -a >> plot.xgr
exec nam s6.nam &
exec /home/student/ns2/xg2gp.awk plot.xgr
if {!$opt(quiet)} {
exec xgraph -bb -tk -nl -m -x time -y packets plot.xgr &
}
exit 0
}

set ns [new Simulator]
variable delayerUL
variable delayerDL

Queue/RED set summarystats_ true
Queue/DropTail set summarystats_ true
Queue/RED set maxthresh_ $opt(maxth)
Queue/DropTail set shrink_drops_ true
Agent/TCP set ecn_ $opt(ecn)
Agent/TCP set packetSize_ $pktsize
Agent/TCP set window_ $opt(window)
DelayLink set avoidReordering_ true

set tf [open umts.tr w]
$ns trace-all $tf

set namfile [open s6.nam w]
$ns namtrace-all $namfile

set nodes(lp) [$ns node]
set nodes(ms) [$ns node]
set nodes(bs) [$ns node]
set nodes(is) [$ns node]
# Create topology
switch $opt(type) {
umts {cell_topo}
}
set_link_params $opt(type)
set delayerDL [new Delayer]
set delayerUL [new Delayer]
$ns insert-delayer $nodes(ms) $nodes(bs) $delayerUL
$ns insert-delayer $nodes(bs) $nodes(ms) $delayerDL
# Set up forward TCP connection
if {$opt(flows) > 0} {
set tcp1 [$ns create-connection TCP/Sack1 $nodes(is) TCPSink/Sack1 $nodes(lp) 0]
set ftp1 [[set tcp1] attach-app FTP]
$ns at 0.8 "[set ftp1] start"
}
if {$opt(shortflows) > 0} {
set tcp1 [$ns create-connection TCP/Sack1 $nodes(is) TCPSink/Sack1 $nodes(lp) 0]
set ftp1 [[set tcp1] attach-app FTP]
$tcp1 set window_ 100
$ns at 0.0 "[set ftp1] start"
$ns at 3.5 "[set ftp1] stop"
set tcp2 [$ns create-connection TCP/Sack1 $nodes(is) TCPSink/Sack1 $nodes(lp) 0]
set ftp2 [[set tcp2] attach-app FTP]
$tcp2 set window_ 3
$ns at 1.0 "[set ftp2] start"
$ns at 8.0 "[set ftp2] stop"
}
# Add forward web traffic.
set req_trace_ 0
set count $opt(webers)
if ($count) {
add_web_traffic $opt(secondDelay) $opt(web) $opt(interpage) $opt(pagesize)
$opt(objSize) $opt(shape) 1
add_web_traffic $opt(secondDelay) [expr $opt(web)/2] $opt(interpage) $opt(pagesize)
$opt(objSize) $opt(shape) 0
}
$ns at $opt(stop) "stop"
$ns run