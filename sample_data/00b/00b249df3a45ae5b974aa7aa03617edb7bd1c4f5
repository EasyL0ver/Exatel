//TO TEST TOMORROW IN THE MEETING
package systemdesign.dbinteractions;
import java.sql.*;

public class CreateDB {
	public static void createUsers() throws Exception {
		Statement stmt = null;
		DBconnect dbcon = new DBconnect();
		Connection con = dbcon.getConnection();
		//not sure if this work or not yet
		try {
			stmt = con.createStatement();
			String sql_users = "CREATE TABLE IF NOT EXISTS users " + "(id INTEGER not NULL AUTO_INCREMENT, "
					+ " username VARCHAR(255), " + " password VARCHAR(255), " + " privilege VARCHAR(255), " + " PRIMARY KEY (id))";
			String sql_departments = "CREATE TABLE IF NOT EXISTS departments " + "(department_name NAVCHAR(30) , "
					+ "abbreviation NAVCHAR(3), " + " PRIMARY KEY (department_name)" ;
			String sql_degrees = "CREATE TABLE IF NOT EXISTS deegrees " + "(deegree_name NAVCHAR(30), " + "abbreviation NAVCHAR(7), " + "department_name NAVCHAR(30) , "
					+ "FOREIGN_KEY (department_name) REFERENCES departments(department_name) " + "PRIMARY KEY (deegree_name))  ";
            String sql_module_grades = "CREATE TABLE IF NOT EXISTS modulegrades " + "(module_name NAVCHAR(50), "+ "grades INTEGER, "
					+ "PRIMARY KEY (module_name)) ";
			String sql_modules = "CREATE TABLE IF NOT EXISTS modules " + "(module_name NAVCHAR(50), " + "lecturer NAVCHAR(30),"+ "abbreviation NAVCHAR(7), " + "number_of_credits INTEGER, "
					+ "period_of_teaching NAVCHAR(30)," + " grades INTEGER " + "FOREIGN_KEY (grades) REFERENCES module_grades(grade)  "  + " PRIMARY KEY (module_name) )" ; //grade is missing, i think we have to reconsider this approach
			String sql_periods_of_study = "CREATE TABLE IF NOT EXISTS periods_of_study " + "(period_of_study NAVCHAR(30) , " + "start_date DATE, " + "end_date DATE,"
					 + "registration_number INTEGER, "+ " PRIMARY KEY (period_of_study)" + "FOREIGN KEY (grades) REFERENCES module_grades(grades) )" ;
			String sql_students = "CREATE TABLE IF NOT EXISTS students " + "(registration_number INTEGER , " + "title NAVCHAR(10), " + "family_name NAVCHAR(30),"
			        + "forename NAVCHAR(30)," + "deegree_name NAVCHAR(30)," + "email_address NAVCHAR(30),"+ "personal_tutor NAVCHAR(30)," + "period_of_study NAVCHAR(30)" 
					+ " PRIMARY KEY (registration_number ) " +  " FOREIGN KEY (deegree_name) REFERENCES deegrees(deegree_name) " 
			        + " FOREIGN KEY (period_of_study) REFERENCES periods_of_study(period_of_study)  )" ;
            String sql_degree_modules = "CREATE TABLE IF NOT EXISTS deegree_modules " + " (deegree_name NAVCHAR(50) , " + "core_modules NAVCHAR(50)," + "optional_modules NAVCHAR(50)" + " "
            //SOMEHOW ADD 3 FOREIGN KEYS WITHOUT A PRIMARY KEY, LOOK AT THIS            
			//in order to enchance security against sql_injection, we have to change the name of the tables (before we start calling the functions) to some "codenames"
			//for example, everything could be a pizza.  1.users=margarherita  2.departments=marinara 3.deegrees=romana
			//4.modules=siciliana 5.periods_of_study=capricciosa 6.students=pepperoni
			//This is experimental code, i suggest you do not run it as of yet
			stmt.executeUpdate(sql_users);
			//stmt.executeUpdate(sql_departments);
			//stmt.executeUpdate(sql_degrees);
            //stmt.executeUpdate(sql_module_grades);
            //stmt.executeUpdate(sql_modules);
            //stmt.executeUpdate(sql_periods_of_study);
			//stmt.executeUpdate(sql_students);
            //stmt.executeUpdate(sql_degree_modules);
            //TOTAL OF 8 TABLES
            
		} catch (SQLException ex) {
			ex.printStackTrace();
		} finally {
			if (stmt != null)
				stmt.close();
			dbcon.close();
		}
	}
	public static void main(String[] args) throws Exception {		
		createUsers();
	}
}