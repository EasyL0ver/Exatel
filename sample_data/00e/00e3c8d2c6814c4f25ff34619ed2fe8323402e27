
Question 2: We are interested in predicting whether a given costumer will stop using the service for a period of one month. First step would be to preprocess the training data in order to find the customers that churned, and when they churned. Note that a customer can stop using the services on two non-consecutive month time periods, and hence should decide on how to treat them. After this step, it would be important to validate that indeed the percentage of clients that churned each month is around 5%.
Another preprocessing step would be, if possible, to classify the different usage events into categories (such as log-in events, transaction events...) on a per-month basis. This would provide much more fine-grained detail which might be key in order to come up with a useful model.
Finally, we could iterate over our data set with a sliding window in order to generate the final labeled data that we will use to train our model. We could do this either on a per-month sliding window or on a 30-day sliding window (which would result in a much bigger set of training examples). Given that our data spans a time period of 5 months, for me it would be reasonable to use 60 days of features/events, and the next 30 to check whether the user churned or not. Also note that we might run into trouble if for example most people that churned did it during the second month (within our dataset), so we should also make sure that the churns are equally distributed in our test data.
As the last step, I would divide the test dataset into a training set (~70% of the examples) and a cross validation set (30%).
Regarding the model, I would consider two main options. First, I would try decision trees, with all the inputs discussed above, predicting the output as a binary variable (Y = 1 if user churned, Y = 0 otherwise). The main advantage of this model is that we can easily tune the size and other variables of the resulting tree, obtaining a compact representation of the model which is also highly interpretable from the business perspective.
Other option would be to use a regression model in order to predict the number of events a user will produce for the next month time period. If this value were to be close to zero, it would mean that the user is likely to churn and we should address him/her personally. This model would be more expensive to train, and the results would be a bit less interpretable than those of a decision tree. However, it can still point out which the main features are for deciding whether a user will churn or not and also we could expect its accuracy (and F1 score) to be higher when compared to that of a simple decision tree.