Dropzone.options.myAwesomeDropzone = { 
  autoProcessQueue: false,
  totalMaxsize: 100,
  parallelUploads: 1,  // since we're using a global 'currentFile', we could have issues if parallelUploads > 1, so we'll make it = 1
  maxFilesize: 10,   // max individual file size 1024 MB
  chunking: true,      // enable chunking
  forceChunking: true, // forces chunking when file.size < chunkSize
  parallelChunkUploads: false, 
  chunkSize: 1000000,  // chunk size 1,000,000 bytes (~1MB)
  retryChunks: true,   // retry chunks on failure
  retryChunksLimit: 10, // retry maximum of 3 times (default is 3)
  maxFiles:30,
  timeout: 600000, 
  paramName:'file',
  acceptedFiles: ".jpg,.jpeg,.png",
  previewTemplate: previewTemplate,
  previewsContainer: "#previews", // Define the container to display the previews
  clickable: ".fileinput-button", // Define the element that should be used as click trigger to select files.
  countImages:0,

params: function (files, xhr, chunk) {

    if (chunk) {
            return {
                dzAlbumID: HERE SHOULD BE MY RETURNED ALBUM ID
                dzUuid: chunk.file.upload.uuid,
                dzChunkIndex: chunk.index,
                dzTotalFileSize: chunk.file.size,
                dzCurrentChunkSize: chunk.dataBlock.data.size,
                dzTotalChunkCount: chunk.file.upload.totalChunkCount,
                dzChunkByteOffset: chunk.index * this.options.chunkSize,
                dzChunkSize: this.options.chunkSize,
                dzFilename: chunk.file.name,

            };
        }
    },