
params = [
	{	
		"id": "dim",
		"displayName": "detail",
		"type": "int",
		"rangeMin": 16,
		"rangeMax": 64,
		"default": 64
	}
];

function process(params) {
	var mesh = new Mesh3D(),
		w = params.dim,
		h = params.dim,
		thick = 2;
	function wave(x, y) {
		x -= w/2;
		y -= h/2;
		var dst = Math.sqrt(x*x + y*y) / 2;
		if(dst == 0.0)
			return 3*1.0;
		else
			return 3*Math.sin(dst) / dst;
	}
	function zup(v){
		return [v[0], v[1], v[2]+thick];
	}
	var rows = [];
	for(var j = 0; j < h; j++){
		rows.push([]);
		for(var i = 0; i < w; i++)
			rows[j].push([i,j,5*wave(i,j)]);
	}
	for(var j = 0; j < h-1; j++){
		for(var i = 0; i < w-1; i++){
			mesh.quad(zup(rows[j][i]),
					  zup(rows[j+1][i]),
					  zup(rows[j+1][i+1]),
					  zup(rows[j][i+1]));
			mesh.quad(
				rows[j][i+1],
				rows[j+1][i+1],				
				rows[j+1][i],
				rows[j][i]);
		}
	}
	for(var j = 0; j < h-1; j++){
		mesh.quad(zup(rows[j][0]), rows[j][0], rows[j+1][0], zup(rows[j+1][0])); 
		mesh.quad(zup(rows[j+1][w-1]), rows[j+1][w-1], rows[j][w-1], zup(rows[j][w-1])); 
	}
	for(var i = 0; i < w-1; i++){
		mesh.quad(zup(rows[0][i]), rows[0][i], rows[0][i+1], zup(rows[0][i+1])); 
		mesh.quad(zup(rows[h-1][i+1]), rows[h-1][i+1], rows[h-1][i], zup(rows[h-1][i])); 
	}
	return Solid.make(mesh);
}