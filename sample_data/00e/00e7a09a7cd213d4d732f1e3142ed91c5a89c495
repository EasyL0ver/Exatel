library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.std_logic_unsigned.all;


-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity zaj2 is
    Port ( SEG: out STD_LOGIC_VECTOR (6 downto 0);
           AN: inout STD_LOGIC_VECTOR (7 downto 0);
           CLK100MHZ : in STD_LOGIC);
end zaj2;

architecture Behavioral of zaj2 is

signal SYG : std_logic_vector (7 downto 0);


--procedure convert7seg(liczba :integer;
--signal seg7: out STD_LOGIC_VECTOR (6 downto 0)) is

--variable display : STD_LOGIC_VECTOR (6 downto 0);
--begin
--case liczba is
--when 0  => display := "1000000"; --0
--when 1  => display := "1111001"; --1
--when 2  => display := "0100100"; --2
--when 3  => display := "0110000"; --3
--when 4  => display := "0011001"; -- 4
--when 5  => display := "0010010"; --5
--when 6  => display := "0000010"; --6
--when 7  => display := "1011000"; --7
--when 8  => display := "0000000"; --8
--when 9  => display := "0010000"; --9
--when others => display := "1111111";
--end case;
--seg7 <= display;
--end convert7seg;


--begin


--AN <= "11111100";
--convert7seg(5,SEG);
procedure convert7seg(liczba :integer;
signal seg7: out STD_LOGIC_VECTOR (6 downto 0)) is

variable display : STD_LOGIC_VECTOR (6 downto 0);
begin
case liczba is
when 0  => display := "1000000"; --0
when 1  => display := "1111001"; --1
when 2  => display := "0100100"; --2
when 3  => display := "0110000"; --3
when 4  => display := "0011001"; -- 4
when 5  => display := "0010010"; --5
when 6  => display := "0000010"; --6
when 7  => display := "1011000"; --7
when 8  => display := "0000000"; --8
when 9  => display := "0010000"; --9
when others => display := "1111111";
end case;
seg7 <= display;
end convert7seg;


begin



LICZNIK : process (CLK100MHZ)
variable CNT: integer:=0;
variable tmp:integer;
variable W1: integer; -- Wi - wartosc na i wyswietlaczu
variable W2: integer;
variable W3: integer;
variable W4: integer;

begin
    if (rising_edge(CLK100MHZ)) then
        if (CNT >= 0 ) and (CNT <=125000 ) then
            AN <= "11111110";
            W1:=W1+1;
            tmp:= W1;        
             
            CNT:=CNT+1;
        elsif (CNT >=125000 ) and (CNT<=250000) then
            AN <= "11111101";
            
           
             if W1=9 then W2:=W2+1;
                W1:=0;
             end if;
             tmp:=W2;
             CNT:=CNT+1;
          
        elsif (CNT >=250000) and (CNT<=375000) then
            AN <= "11111011";
           
            if W2=9 then W3:=W2+1;
               W2:=0;
            end if;
            tmp:=W3;   
                      
            CNT:=CNT+1;
        elsif(CNT >=375000) and (CNT<500000) then
       
            AN <= "11110111";
            if W3=9 then W4:=W4+1;
               W3:=0;
            end if;
            tmp:=W4;
          
             CNT:=CNT+1;
 		elsif(CNT = 625000) then
		CNT:= 0;
		end if;
        else
            CNT := CNT+1;
			convert7seg(tmp,SEG);
        end if;         
       
    end if;
end process;

end Behavioral;

















------------------------------------


licz: process(CLK100MHZ)
variable CNT: integer := 0;
variable TMP: integer;
variable C1: integer;
variable C2: integer;
variable C3: integer;
variable C4: integer;

begin
if (rising_edge(CLK100MHZ)) then
case CNT is
when 0 =>   AN <= "11111110";
			C1:=C1+1;
			TMP:=C1;
			CNT := CNT+1;
when 125000 =>  AN <= "11111101";
				if C1=9 then C2:=C2+1;
					C1:=0;
				end if;
				TMP:=C2;
				CNT := CNT+1;
when 250000 =>   AN <= "11111011";
				if C2=9 then C3:=C3+1;
				C2:=0;
				end if;
				TMP:=C3;
				CNT := CNT+1;
when 375000 =>   AN <= "11110111";
				if C3=9 then C4:=C4+1;
				C3:=0;
				end if;
				TMP:=C4;
				CNT := CNT+1;

when 500000 =>      CNT :=0;
when others =>      CNT := CNT+1;
		convert7seg(TMP,SEG);
end case;
end if;
end process;
end Behavioral;