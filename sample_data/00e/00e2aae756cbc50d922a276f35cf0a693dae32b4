#include <bits/stdc++.h> 
using namespace std; 
int power(int x, unsigned int y, int p) 
{ 
    int res = 1;      
    x = x % p;  
    while (y > 0) 
    { 
        if (y & 1) 
            res = (res*x) % p; 
  
        y = y>>1; 
        x = (x*x) % p; 
    } 
    return res; 
} 

bool miillerTest(int d, int n) 
{ 

    int a = 2 + rand() % (n - 4); 
  
    int x = power(a, d, n); 
  
    if (x == 1  || x == n-1) 
       return true; 
  

    while (d != n-1) 
    { 
        x = (x * x) % n; 
        d *= 2; 
  
        if (x == 1)      return false; 
        if (x == n-1)    return true; 
    } 
  
    return false; 
} 

bool isPrime(int n, int k) 
{ 
    if (n <= 1 || n == 4)  return false; 
    if (n <= 3) return true; 
  
    int d = n - 1; 
    while (d % 2 == 0) 
        d /= 2; 
  
    for (int i = 0; i < k; i++) 
         if (!miillerTest(d, n)) 
              return false; 
  
    return true; 
} 
  
int main() 
{ 
    int k = 2;
    int n; 
    cout <<"N: ";
    cin>>n;  
    for (int i = 1; i < n; i++) 
       if (isPrime(i, k)) 
          cout << i << " "; 
  
    return 0; 
} 





#include<iostream>
#include<stdio.h>
#include<math.h>
using namespace std;
int gcd(int x,int y)
{
	if(x == 0)
		return x;
	else if(y ==0)
		return y;
	else{
		if(x > y)
			gcd(x-y , y);
		else if(y > x)
			gcd(x , y-x);
		else
			return x;
	}
}
int coprime(int a, int b) { 
      
    if ( gcd(a, b) == 1) 
        cout << "Co-Prime" << endl;  
    else
        cout << "Not Co-Prime" << endl;         
    return 1;
} 


void func(int x ,int y){
	float a;
	float b;

	if(coprime(x,y)){
		for (a=1;a<1000;a++){
			b = ((1-(a*x))/y);
			if(floor(b) == ceil(b)){
				cout<<"A: "<<a<<" B: "<<b<<endl;
				break;
			}
		}
	}
}

int modInv(int x,int y){
	for(int i=0;i<y;i++){
		int temp = x*i % y;
		if(temp==1)
			return i;

	}
}

int main(){
	int x , y;
	cout<<"X: ";
	cin>>x;
	cout<<"Y: ";
	cin>>y;
	func(x,y);
	cout<<"\n Mod Inv: "<<modInv(x,y)<<endl;

}