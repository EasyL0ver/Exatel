    llvm::Function *fallback;
    {   
      auto functype = FunctionType::get(Type::getVoidTy(*con), {Type::getInt64Ty(*con)}, false);
      fallback = Function::Create(functype,
          Function::ExternalLinkage,
          "Fallback",
          mainmodule);

      using ClassPtr = void(Emu::CPUCore::*)();
      union Test{
        ClassPtr ClassData;
        void* Data;
      };  
      Test A;
      A.ClassData = &CPUCore::FallbackToUnicorn;
      engine->addGlobalMapping(fallback, A.Data);

    }   
    // XXX: Generate code
    {   
      builder->CreateCall(fallback, builder->getInt64((uint64_t)cpu));
      builder->CreateRetVoid();
    }