// Calling Packages
const Discord = require('discord.js');
const bot = new Discord.Client();
const client = new Discord.Client(); 
const weather = require('weather-js');
const fs = require("fs");
// Global Settings
const prefix = '/'; // This is the prefix, you can change it to whatever you want.
bot.commands = new Discord.Collection();

fs.readdir("./cmds/", (err, files) => {
    if(err) console.error(err);

    let jsFiles = files.filter(f => f.split(",").pop() === "js");
    if(jsFiles.length <= 0) {
        console.log("no commands to load")
        return;
    }

    console.log(Loading ,$,{jsFiles:length} commands!);
    jsfiles.foreach((f, i  => {
        let props = require(./cmds/$(f));
        console.log(`${i + 1}: ${f} loaded`);
        bot.commands.set(f, props);
        

    });


});


// Listener Event: Runs whenever a message is received.
bot.on('message', message => {
    if(message.author.bot) return;
    
    // Variables - Variables make it easy to call things, since it requires less typing.
    let msg = message.content // This variable takes the message, and turns it all into uppercase so it isn't case sensitive.
    let sender = message.author; // This variable takes the message, and finds who the author is.
    let cont = message.content.slice(prefix.length).split(" "); // This variable slices off the prefix, then puts the rest in an array based off the spaces
    let args = cont.slice(1); // This slices off the command in cont, only leaving the arguments.
    // Commands

    // Ping
    
    if (msg === prefix + 'ping') { // This checks if msg (the message but in all caps), is the same as the prefix + the command in all caps.

        // Now, let's send a response.
        message.channel.send('Pong!'); // This 'sends' the message to the channel the message was in. You can change what is in the message to whatever you want.

    }

    //Help Command Simple (NO DM Help Message)
    if (msg === prefix + 'help') { // This checks if msg (the message but in all caps), is the same as the prefix + the command in all caps.

        // Now, let's send a response.
        message.channel.send('```Commands\nAdministrative Commands\n/kick-Kicks a User\n/Ban-Bans a User\n/report-Reports a User who is breaking the rules\n\nFun Commands\n/rolldice-Rolls a Dice\n/8ball-Uses a 8Ball\n/weather-Checks the weather in your area\n\nMiscellanious Commands\nPing-Replies with Pong(used to test how fast it responds.```'); // This 'sends' the message to the channel the message was in. You can change what is in the message to whatever you want.
        
    }


    // Purge
    if (msg.startsWith(prefix + 'purge')) { // This time we have to use startsWith, since we will be adding a number to the end of the command.
        // We have to wrap this in an async since awaits only work in them.
        async function purge() {
            message.delete(); // Let's delete the command message, so it doesn't interfere with the messages we are going to delete.

            // Now, we want to check if the user has the `bot-commander` role, you can change this to whatever you want.
            if (!message.member.roles.find("name", "Moderator")) { // This checks to see if they DONT have it, the "!" inverts the true/false
                message.channel.send('You need the \`Moderator\` role to use this command.'); // This tells the user in chat that they need the role.
                return; // this returns the code, so the rest doesn't run.
            }

            // We want to check if the argument is a number
            if (isNaN(args[0])) {
                // Sends a message to the channel.
                message.channel.send('Please use a number as your arguments. \n Usage: ' + prefix + 'purge <amount>'); //\n means new line.
                // Cancels out of the script, so the rest doesn't run.
                return;
            }

            const fetched = await message.channel.fetchMessages({limit: args[0]}); // This grabs the last number(args) of messages in the channel.
            console.log(fetched.size + ' messages found, deleting...'); // Lets post into console how many messages we are deleting

            // Deleting the messages
            message.channel.bulkDelete(fetched)
                .catch(error => message.channel.send(`Error: ${error}`)); // If it finds an error, it posts it into the channel.

        }

        // We want to make sure we call the function whenever the purge command is run.
        purge(); // Make sure this is inside the if(msg.startsWith)

    }
    //Kick
    if (msg.startsWith(prefix + 'kick')) { 
        let kUser = message.guild.member(message.mentions.users.first() || message.guild.members.get(args[0]));
     if(!kUser) return message.channel.send("Can't find user!");
     let kReason = args.join(" ").slice(22);
     if(!message.member.hasPermission("MANAGE_MESSAGES")) return message.channel.send("No can do pal!");
     if(kUser.hasPermission("MANAGE_MESSAGES")) return message.channel.send("That person can't be kicked!");

    let kickEmbed = new Discord.RichEmbed()
        .setDescription("~Kick~")
        .setColor("#e56b00")
        .addField("Kicked User", `${kUser} with ID ${kUser.id}`)
        .addField("Kicked By", `<@${message.author.id}> with ID ${message.author.id}`)
        .addField("Kicked In", message.channel)
        .addField("Tiime", message.createdAt)
        .addField("Reason", kReason);

    let kickChannel = message.guild.channels.find(`name`, "general");
    if(!kickChannel) return message.channel.send("Can't find the general channel.");

        message.guild.member(kUser).kick(kReason);
         kickChannel.send(kickEmbed);

    return;
    }
    

    //Ban 
    if (msg.startsWith(prefix + 'ban')) { 
            let bUser = message.guild.member(message.mentions.users.first() || message.guild.members.get(args[0]));
            if(!bUser) return message.channel.send("Can't find user!");
            let bReason = args.join(" ").slice(22);
            if(!message.member.hasPermission("MANAGE_MEMBERS")) return message.channel.send("No can do pal!");
            if(bUser.hasPermission("MANAGE_MESSAGES")) return message.channel.send("That person can't be kicked!");
        
            let banEmbed = new Discord.RichEmbed()
            .setDescription("~Ban~")
            .setColor("#bc0000")
            .addField("Banned User", `${bUser} with ID ${bUser.id}`)
            .addField("Banned By", `<@${message.author.id}> with ID ${message.author.id}`)
            .addField("Banned In", message.channel)
            .addField("Time", message.createdAt)
            .addField("Reason", bReason);
        
            let incidentchannel = message.guild.channels.find(`name`, "general");
            if(!incidentchannel) return message.channel.send("Can't find general channel.");
        
            message.guild.member(bUser).ban(bReason);
            incidentchannel.send(banEmbed);
        
        
            return;
          }

///8Ball Command
if (msg.startsWith(prefix + '8ball')) {
    
        if (!args[2]) return message.reply("Please ask a full question!");
        let replies = ["Yes, Certainly :8ball:", "No, Never :8ball:", "Please ask again :8ball:", "Maybe, :8ball:", "I Dought it :8ball:", "You may rely on it :8ball:", "Most likely :8ball:", "Unlikely :8ball:", "Very Unlikely :8ball:", "Definatly :8ball:"]
        let result = Math.floor((Math.random() * replies.length));
    
        let question = args.slice(1).join(" ");
    
        let embedz = new Discord.RichEmbed()
            .setAuthor(message.author.username + " asks: " + question)
            .setColor("#D3D3D3")
            .addField("Answer", "Asked by " + message.author.tag + "\nAnswer: " + replies[result] + "")
    
            message.channel.send({embed: embedz});
}

//Youtube and Google Search 
if(msg.startsWith(prefix + "google")) {
    let google = args.slice(1).join('+');
    let link = `https://www.google.com/search?q=` + google;
	message.channel.send(link);
}
    
if(msg.startsWith(prefix + "youtube")) {
    let youtube = args.slice(1).join('+');
    let link = `https://www.youtube.com/results?search_query=` + youtube;
	message.channel.send(link);
}

//Roll Dice
if(msg.startsWith(prefix + "rolldice")) {
    let replies = ["One", "Two", "Three", "Four", "Five", "Six"];
    let result = Math.floor((Math.random() * replies.length));

    message.delete().catch(O_o => {});

    try {
        let newembed = new Discord.RichEmbed()
            .setAuthor("A dice has been rolled!")
            .setColor("#00FF00")
            .setDescription("Rolled By: " + message.author.username + "\nResult: " + replies[result]);

        message.channel.send({
            embed: newembed
        });
    } catch (e) {
        console.log(e.stack);
    }; // The try is because it errored when I didn't do it.
};

module.exports.help = {
    name: "rolldice"
}
//Weather
if (msg.startsWith(prefix + 'weather')) { // This checks to see if the beginning of the message is calling the weather command.
    // You can find some of the code used here on the weather-js npm page in the description.

    weather.find({search: args.join(" "), degreeType: 'F'}, function(err, result) { // Make sure you get that args.join part, since it adds everything after weather.
        if (err) message.channel.send(err);

        // We also want them to know if a place they enter is invalid.
        if (result === undefined || result.length === 0) {
            message.channel.send('**Please enter a valid location.**') // This tells them in chat that the place they entered is invalid.
            return; // This exits the code so the rest doesn't run.
        }

        // Variables
        var