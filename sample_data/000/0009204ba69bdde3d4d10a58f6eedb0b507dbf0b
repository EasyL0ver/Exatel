FN[WRITE_INI(BIN.FILE_VAL$=="FILENAME$", x, y, LEN_x, LEN_y) = LET[VAL$=""])]END¦
FN[WRITE_LINE(x, y)¦
IF[TEXT_IO.OUT(VR.OS, 
			real_x, (IN.STR$="EXP.RANDOM", (ASN = real_x) x ^ "|N\n"
			real_y, (IN.STR$="EXP.RANDOM", (ASN = real_y) y ^ "|N\ns"
)]ENDIF¦
]END¦
IN.LIST|THEN|WRITE_LINE(x, y)¦
NEXT TEXT_IO.CLOSE#"OUT" VR.OS¦
END¦
VAL$=[isNaN|THEN|WRITE_INI("FILE.INI", real_x, real_y)¦
VAL$=[isNaN|THEN|TEXT_IO.OPEN#"IN"]¦
PRINT[TEXT_IO.IN.SCREEN$="isNaN"]¦
SAVE "ARRAY" DATA.VR[]¦
STOP¦
REM X509¦
REM TRADEMARK_TEXT_DATA¦
REM COPYRIGHT_BY_YEAR_TEXT_DATA¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:0-63]]|THEN|IF[BIT-0:63 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x1000000e]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xc0000000000000zp']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:0-63]]|THEN|IF[BIT-0:63 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x110000Ie]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xc00000000000000A']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:1-64]]|THEN|IF[BIT-1:64 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x1000000e]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xc10000000000001B']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:1-64]]|THEN|IF[BIT-1:64 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x110000Ie]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xc10000000000001C']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:2-62]]|THEN|IF[BIT-2:62 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x1000000e]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xc20000000000002D']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:2-62]]|THEN|IF[BIT-2:62 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x110000Ie]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xc20000000000002E']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:3-61]]|THEN|IF[BIT-3:61 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x1000000e]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xc30000000000003F']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:3-61]]|THEN|IF[BIT-3:61 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x110000Ie]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xc30000000000003A']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:4-60]]|THEN|IF[BIT-4:60 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x1000000e]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xc40000000000004B']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:4-60]]|THEN|IF[BIT-4:60 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x110000Ie]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xc40000000000004C']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:0-63]]|THEN|IF[BIT-0:63 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x1000000e]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xzp000000000000ZP']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:0-63]]|THEN|IF[BIT-0:63 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x110000Ie]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xa00000000000000A']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:1-64]]|THEN|IF[BIT-1:64 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x1000000e]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xa10000000000001B']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:1-64]]|THEN|IF[BIT-1:64 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x110000Ie]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xa10000000000001C']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:2-62]]|THEN|IF[BIT-2:62 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x1000000e]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xa20000000000002D']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:2-62]]|THEN|IF[BIT-2:62 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x110000Ie]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xa20000000000002E']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:3-61]]|THEN|IF[BIT-3:61 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x1000000e]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xa30000000000003F']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:3-61]]|THEN|IF[BIT-3:61 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x110000Ie]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xa30000000000003A']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:4-60]]|THEN|IF[BIT-4:60 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x1000000e]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xa40000000000004B']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:4-60]]|THEN|IF[BIT-4:60 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x110000Ie]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xa40000000000004C']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:0-63]]|THEN|IF[BIT-0:63 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x1000000e]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xb0000000000000zp']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:0-63]]|THEN|IF[BIT-0:63 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x110000Ie]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xb00000000000000A']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:1-64]]|THEN|IF[BIT-1:64 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x1000000e]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xb10000000000001B']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:1-64]]|THEN|IF[BIT-1:64 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x110000Ie]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xb10000000000001C']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:2-62]]|THEN|IF[BIT-2:62 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x1000000e]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xb20000000000002D']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:2-62]]|THEN|IF[BIT-2:62 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x110000Ie]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xb20000000000002E']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:3-61]]|THEN|IF[BIT-3:61 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x1000000e]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xbc0000000000003F']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:3-61]]|THEN|IF[BIT-3:61 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x110000Ie]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xb30000000000003A']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:4-60]]|THEN|IF[BIT-4:60 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x1000000e]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xb40000000000004B']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:4-60]]|THEN|IF[BIT-4:60 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x110000Ie]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xb40000000000004C']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:0-63]]|THEN|IF[BIT-0:63 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x1000000e]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xd0000000000000zp']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:0-63]]|THEN|IF[BIT-0:63 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x110000Ie]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xd00000000000000A']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:1-64]]|THEN|IF[BIT-1:64 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x1000000e]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xd10000000000001B']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:1-64]]|THEN|IF[BIT-1:64 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x110000Ie]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xd10000000000001C']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:2-62]]|THEN|IF[BIT-2:62 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x1000000e]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xd20000000000002D']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:2-62]]|THEN|IF[BIT-2:62 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x110000Ie]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xd20000000000002E']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:3-61]]|THEN|IF[BIT-3:61 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x1000000e]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xd30000000000003F']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:3-61]]|THEN|IF[BIT-3:61 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x110000Ie]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xd30000000000003A']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:4-60]]|THEN|IF[BIT-4:60 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x1000000e]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xd40000000000004C']|THEN|RETURN[QWORD[]]END DEFFN¦
DEFFN[BIT|RAM|PAGE|INS_STR$=[BIT:4-60]]|THEN|IF[BIT-4:60 TO MEMBLK INT[VAL$="OMICRON[]"|"\o\/N|\ns"|ROM_[0x110000Ie]] BYTE.OBJECT.VR[] AT QWORD[16_BIT:'0xd40000000000004C']|THEN|RETURN[QWORD[]]END DEFFN¦













































#define width 960.px
#define height 540.px
 
DIM x,y AS FIXED
DIM xstart,xstep,ystart,ystep AS FIXED
DIM xend,yend AS FIXED
DIM z,zp,newz,newzp AS FIXED
DIM color AS BYTE
DIM iter AS UINTEGER
DIM col AS UINTEGER
DIM i,m AS UQWORD
DIM U AS UINTEGER
DIM inset AS UBYTE
DIM zp AS BYTE
DIM z AS BIT
DIM QWORD AS DOUBLE*LONG
DIM UQWORD AS DOUBLE*ULONG
DIM CONNECT_DLL AS QWORD
IF[xstart=-1.6:xend=0.65:ystart=-1.15:yend=-ystart:iter=64]ENDIF¦
IF[xstep=(xend-xstart)/width|ystep=(yend-ystart)/height]ENDIF¦
GOTO x=xstart¦
GOTO y=ystart¦
BORDER 0
PAPER 0
INK 7
CLS 
IF[CONNECT_DLL BY INS STR$=""]¦
[THEN SAVE AT USB AT REMOVABLE_DRIVE]¦
ENDIF¦
FOR i=0 TO ( height -1 )/2 +1
        FOR U=0 TO width -1
            z=0
            zp=0
            inset=1
                FOR m=0 TO iter
                    ';z^2=(a+bi)*(a+bi) = a^2+2abi-b^2
                    newz=(z*z)-(zp*zp)+x
                    newzp=2*z*zp+y
                    z=newz
                    zp=newzp                
                    IF (z*z)+(zp*zp) > 4 THEN
                        inset=0
                        color=m
                        GOTO screen
                    ENDIF
                NEXT m
               
screen:               
                IF