package fr.trxyy.lypsia.interfaces;

import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URISyntaxException;
import java.net.URL;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.prefs.Preferences;

import javax.imageio.ImageIO;

import fr.trxyy.lypsia.ForgeLauncher;
import fr.trxyy.lypsia.LauncherConstants;
import fr.trxyy.lypsia.auth.Authenticator;
import fr.trxyy.lypsia.auth.LypsiaAuth;
import fr.trxyy.lypsia.auth.Profile;
import fr.trxyy.lypsia.components.LauncherButton;
import fr.trxyy.lypsia.components.LauncherButtonToggle;
import fr.trxyy.lypsia.components.LauncherLabel;
import fr.trxyy.lypsia.components.LauncherPasswordField;
import fr.trxyy.lypsia.components.LauncherTextField;
import fr.trxyy.lypsia.updater.Updater;
import fr.trxyy.lypsia.updater.XMLParser;
import fr.trxyy.lypsia.util.LauncherAlert;
import fr.trxyy.lypsia.util.OSUtil;
import fr.trxyy.lypsia.util.Wrapper;
import javafx.animation.Animation;
import javafx.animation.KeyFrame;
import javafx.animation.Timeline;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.embed.swing.SwingFXUtils;
import javafx.event.EventHandler;
import javafx.scene.Parent;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.ContentDisplay;
import javafx.scene.control.TextArea;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.image.ImageViewBuilder;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.Pane;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javafx.scene.media.MediaView;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;
import javafx.scene.text.Font;
import javafx.scene.web.WebView;
import javafx.stage.Stage;
import javafx.util.Duration;

public class LauncherPanel {

	protected static final double SPEED_ANIM = 2.0F;
	private static LauncherPanel INSTANCE;
	private String[] urlList = { "http://lypsia-mc.fr/", "http://lypsia-mc.fr/forum/", "http://lypsia-mc.fr/shop/", "http://lypsia-mc.fr/github/", "http://lypsia-mc.fr/discord/", "http://lypsia-mc.fr/facebook/", "http://lypsia-mc.fr/profile/" };
	public static WebView updateNews;
	public LauncherTextField usernameField;
	public LauncherPasswordField SimplePasswordField;
	public LauncherButton loginButton;
	public LauncherButton closeButton;
	public LauncherButton minimizeButton;
	public LauncherButton homeButton;
	public LauncherButton settingsButton;
	public LauncherButton consoleButton;
	public LauncherButton accountButton;
	public LauncherLabel stayLauncherOpened;
	public List<LauncherButton> buttonList = new ArrayList();
	private int currentMenu = 0;
	private boolean isLogged = false;
	private ImageView headImage;
	private ImageView logoImage;
	public Rectangle topBarRect;
	public Pane root;
	private TextArea consoleArea;
	private LauncherButtonToggle stayOpenedToggle;
	private LauncherLabel openConsole;
	private LauncherButtonToggle openConsoleToggle;
	private LauncherLabel installFolder;
	private LauncherButton installFolderBtn;
	private LauncherLabel forceUpdate;
	private LauncherButton forceUpdateButton;
	private LauncherLabel ramLabel;
	private ComboBox ramBox;
	private LauncherButton discordButton;
	private LauncherButton contactButton;
	private Rectangle settingsRect;
	private static LauncherLabel downloadLabel;
	public static Updater updater = new Updater();
	public static XMLParser parser = new XMLParser();
	private static DecimalFormat df2 = new DecimalFormat(".##");
	
	private double posBaseAnim = 0.0D; // -100
	private double posMaxAnim = 1.0D; // LauncherConstants.getWidth() / 2 - 50
	public Thread movingThread;
	private Preferences savedData = Preferences.userRoot();

	public Parent createContent(Stage stage) {
		Pane contentPane = new Pane();
		root = contentPane;
		INSTANCE = this;
		
		this.displayBackground();
		this.loadFont();
		this.createTopPanel();
		this.buildConsolePanel();
		this.buildLoginPanel();
		this.buildSettingsPanel();
		
		this.buttonList.add(getHomeButton());
		this.buttonList.add(getSettingsButton());
		this.buttonList.add(getConsoleButton());
		this.switchButton(this.currentMenu);
		return contentPane;
	}
	
	public void addTextToConsole(String txt) {
		String formattedtext = "[" + LauncherConstants.getTitle() + "] " + txt;
		getConsole().setText(getConsole().getText() + "\n" + formattedtext);
		getConsole().appendText("");
	}

	public void switchButton(int index) {
		((LauncherButton) this.buttonList.get(0)).setTransparent();
		((LauncherButton) this.buttonList.get(1)).setTransparent();
		((LauncherButton) this.buttonList.get(2)).setTransparent();

		LauncherButton change = (LauncherButton) this.buttonList.get(index);
		change.setStyle("-fx-background-color: rgba(53,89,119,0.4); -fx-text-fill: white;");
		this.currentMenu = index;
		this.switchMenu(this.currentMenu);
	}

	private void switchMenu(int menu) {
		if (menu == 0) {
			if (!isLogged) {
				getUsernameField().setVisible(true);
				getPasswordField().setVisible(true);
				getLoginButton().setVisible(true);
				logoImage.setVisible(true);
			}
			else {
				getNews().setVisible(true);
				getAccountButton().setVisible(true);
				logoImage.setVisible(false);
			}
			
			getConsole().setVisible(false);
			stayOpenedToggle.setVisible(false);
			stayLauncherOpened.setVisible(false);
			settingsRect.setVisible(false);
			openConsole.setVisible(false);
			openConsoleToggle.setVisible(false);
			installFolder.setVisible(false);
			installFolderBtn.setVisible(false);
			forceUpdate.setVisible(false);
			forceUpdateButton.setVisible(false);
			ramLabel.setVisible(false);
			ramBox.setVisible(false);
			discordButton.setVisible(false);
			contactButton.setVisible(false);
			
		} else if (menu == 1) {
			if (!isLogged) {
				getUsernameField().setVisible(false);
				getPasswordField().setVisible(false);
				getLoginButton().setVisible(false);
				getNews().setVisible(false);
				logoImage.setVisible(false);
			}
			else {
				getNews().setVisible(false);
				getAccountButton().setVisible(false);
				logoImage.setVisible(false);
			}
			
			getConsole().setVisible(false);
			stayOpenedToggle.setVisible(true);
			stayLauncherOpened.setVisible(true);
			settingsRect.setVisible(true);
			openConsole.setVisible(true);
			openConsoleToggle.setVisible(true);
			installFolder.setVisible(true);
			installFolderBtn.setVisible(true);
			forceUpdate.setVisible(true);
			forceUpdateButton.setVisible(true);
			ramLabel.setVisible(true);
			ramBox.setVisible(true);
			discordButton.setVisible(true);
			contactButton.setVisible(true);
		} else if (menu == 2) {
			if (!isLogged) {
				getUsernameField().setVisible(false);
				getPasswordField().setVisible(false);
				getLoginButton().setVisible(false);
				getNews().setVisible(false);
				logoImage.setVisible(false);
			}
			else {
				getNews().setVisible(false);
				getAccountButton().setVisible(false);
				logoImage.setVisible(false);
			}
			
			getConsole().setVisible(true);
			stayOpenedToggle.setVisible(false);
			stayLauncherOpened.setVisible(false);
			settingsRect.setVisible(false);
			openConsole.setVisible(false);
			openConsoleToggle.setVisible(false);
			installFolder.setVisible(false);
			installFolderBtn.setVisible(false);
			forceUpdate.setVisible(false);
			forceUpdateButton.setVisible(false);
			ramLabel.setVisible(false);
			ramBox.setVisible(false);
			discordButton.setVisible(false);
			contactButton.setVisible(false);
		}
	}

	private void createTopPanel() {
		getTopRect().setStroke(Color.BLACK);
		getTopRect().setOpacity(0.6);
		root.getChildren().add(getTopRect());

		ImageView leftTopFavicon = new ImageView();
		leftTopFavicon.setImage(loadImage("favicon.png"));
		leftTopFavicon.setFitWidth(28);
		leftTopFavicon.setPreserveRatio(true);
		leftTopFavicon.setSmooth(true);
		leftTopFavicon.setCache(true);
		root.getChildren().add(leftTopFavicon);

		getHomeButton().setStyle("-fx-text-fill: white;");
		getHomeButton().setTransparent();
		getHomeButton().setFont(Font.font("Minecraft", 16F));
		getHomeButton().setText("Accueil");
		getHomeButton().setSize(100, 30); // 100, 30
		getHomeButton().setPosition(0 + 30, 0); // 0, 0
		getHomeButton().setAction(e -> {
			switchButton(0);
		});

		getSettingsButton().setTransparent();
		getSettingsButton().setFont(Font.font("Minecraft", 16F));
		getSettingsButton().setText("Options");
		getSettingsButton().setSize(130, 30);
		getSettingsButton().setPosition(110 + 30, 0);
		getSettingsButton().setAction(e -> {
			switchButton(1);
		});

		getConsoleButton().setTransparent();
		getConsoleButton().setFont(Font.font("Minecraft", 18F));
		getConsoleButton().setText("Mise Ã  jour");
		getConsoleButton().setSize(150, 30);
		getConsoleButton().setPosition(240 + 30, 0);
		getConsoleButton().setAction(e -> {
			switchButton(2);
		});

		getReduceButton().setPrefSize(37, 25);
		getReduceButton().setLayoutX(LauncherConstants.getWidth() - 83);
		getReduceButton().setLayoutY(-4);
		getReduceButton().setBackground(null);
		Image buttonImageMinimize = loadImage("minimize.png");
		getReduceButton().setGraphic(new ImageView(buttonImageMinimize));
		getReduceButton().setOnMouseEntered(new EventHandler<MouseEvent>() {
			@Override
			public void handle(MouseEvent event) {
				getReduceButton().setOpacity(0.80);
			}
		});
		getReduceButton().setOnMouseExited(new EventHandler<MouseEvent>() {
			@Override
			public void handle(MouseEvent event) {
				getReduceButton().setOpacity(1.0);
			}
		});
		getReduceButton().setOnAction(event -> {
		