class Monster
{
    private int _health;
    private int _damage;
    private bool _status = false;


    public static List<Monster> mnss = new List<Monster>();
    public static PictureBox[] monster = new PictureBox[15];
    public static int level;
    string path = Path.GetDirectoryName("Debug");

    public Monster()
    {

    }
    public void _Monster()
    {

        switch (Form1.form.chapter_number)
        {


            case 2:
                level = 2; //these level numbers are actually same for the map number, it's for the picturebox names.

                mnss.Add(new Monster(300, 400, 80, 50, 20, 2, 0, true));  //int x, int y, int width, int height, int health, int damage, int number, bool status
                mnss.Add(new Monster(906, 203, 80, 50, 20, 2, 1, true));
                mnss.Add(new Monster(1050, 259, 80, 50, 20, 2, 2, true));
                mnss.Add(new Monster(597, 172, 80, 50, 20, 2, 3, true));
                mnss.Add(new Monster(819, 459, 80, 50, 20, 2, 4, true));
                mnss.Add(new Monster(470, 194, 80, 50, 20, 2, 5, true));
                mnss.Add(new Monster(673, 323, 80, 50, 20, 2, 6, true));


                break;

            case 3:
                level = 3;

                    mnss.RemoveRange(0, mnss.Count);// this removes previous monsters from the list when the character enters to other map.


                mnss.Add(new Monster(566, 312, 80, 50, 40, 4, 0, true));
                mnss.Add(new Monster(906, 203, 80, 50, 40, 4, 1, true));
                mnss.Add(new Monster(600, 259, 80, 50, 40, 4, 2, true));
                mnss.Add(new Monster(450, 200, 80, 50, 40, 4, 3, true));

                //Form1.countz = Form1.countz - Form1.county;
                break;
        }
    }
    public Monster(int x, int y, int width, int height, int health, int damage, int number, bool status)
    {

        this.health = health;
        this.damage = damage;
        this.status = status;

            monster[number] = new PictureBox
            {
                Name = "Monster" + level + "_" + number,
                Size = new Size(width, height),
                Location = new Point(x, y),
                BackColor = Color.Transparent,
                Image = Image.FromFile(path + "spider.gif"),
                BackgroundImageLayout = ImageLayout.Stretch,
            };

            Form1.form.Controls.Add(monster[number]);
            Form1.form.pictureBox1.SendToBack();
            monster[number].BringToFront();
            //Form1.countz += 1;

    }



    public int health
    {
        get { return _health; }
        set { _health = value; }
    }
    public int damage
    {
        get { return _damage; }
        set { _damage = value; }
    }
    public bool status
    {
        get { return _status; }
        set { _status = value; }
    }

}
	
if (e.KeyCode == Keys.X)
        {
            for (int i = 0; i < Monster.mnss.Count; i++){
                if (!rect.IntersectsWith(Monster.monster[i].Bounds)){   }
                else
                {
                    Monster.mnss[i].health -= 2;

                    if (Monster.mnss[i].health <= 0)
                    {
                        Monster.monster[i].Dispose();
                        Monster.mnss[i].status = false;

                        //Monster.mnss.Remove(Monster.mnss[i]);

                    }
                }
            }     
        }
	
class Map_Objects
{
    Monster mns = new Monster();        
    CreateObject map_objects = new CreateObject();
    public Map_Objects()
    {

    }

    public Map_Objects(int x)
    {


        switch (x)
        {          
            case 1:

                map_objects.map_number = 1;                   
                map_objects.CreateObject1(0, 254, 530, 400);
                map_objects.CreateObject1(690, 254, 575, 380);    //Ignore those map_objects.CreateObject1 s here,
                map_objects.CreateObject1(0, 0, 530, 140);   // these are for creating pictureboxes for the collision check.
                map_objects.CreateObject1(690, 0, 570, 140);

                break;
            case 2:
                map_objects.map_number = 2;

                mns._Monster(); //I'm calling my monster class for monster creation here.
                map_objects.CreateObject1(0, 266, 187, 350);
                map_objects.CreateObject1(190, 520, 922, 62);
                map_objects.CreateObject1(1125, 30, 133, 505);
                map_objects.CreateObject1(0, 0, 187, 145);
                map_objects.CreateObject1(187, 0, 550, 20);
                map_objects.CreateObject1(908, 0, 336, 20);
                break;