//localni test
function testLocal (){
var resultJSON = createGeoJSON ("14.501056", "50.1091239", "1");
};
//pro publish jako web app
function doGet(e) {

//reads parameters from the input URL
  var eLON = e.parameter.lon;
  var eLAT = e.parameter.lat;
  var eRAD = e.parameter.rad;
  var result = createGeoJSON(eLAT, eLON, eRAD); //output from createGeoJSON function
    return ContentService.createTextOutput(result) 
    .setMimeType(ContentService.MimeType.JAVASCRIPT); //setting the MIME type
};
function returnCorrectArray(sourceCoordinates) {
    //sem budeme hazet ty usporadany
    var targetCoordinates = [];
    var tempCoordinate = null;
    var itemIndexes = [];
 
    //otestujeme jestli vubec mame neco na vstupu (jinak by to mohlo padnout na tom ze nezna .length of null)
    if(!!sourceCoordinates) {
        //projedeme cele source pole
        for(var i = 0; i < sourceCoordinates.length; i++) {
            //nadefinujeme, co ted mame za koordinat
            var thisCoordinate = sourceCoordinates[i];
            var thisCoordinateHash = "" + thisCoordinate[0] + thisCoordinate[1];
 
            //zjistime, jestli uz ho mame v tom novem poli (pres jeho hash)
            var possibleIndex = itemIndexes.indexOf(thisCoordinateHash);
 
            //kdyz jo, tak ho z toho pole dame pryc, pak ho znovu vlozime na zacatek, a do docasne promenne, kterou pak dame na konec
            if(possibleIndex >= 0) {
                //pryc
                targetCoordinates.splice(possibleIndex, 1);
 
                //na zacatek
                targetCoordinates.unshift(thisCoordinate);
 
                //do tempu
                tempCoordinate = thisCoordinate;
            }
            else {
                //dame ho na jeho normal misto - a ulozime hash
                targetCoordinates.push(thisCoordinate);
                itemIndexes.push(thisCoordinateHash);
            }
        }
 
        //skoncil cyklus, mame neco v tempu? jestli jo, hodime na konec
        if(!!tempCoordinate) {
            targetCoordinates.push(tempCoordinate);
        }
    }
    return targetCoordinates;
};

/////////////////////////////////////////////////
function createGeoJSON(lat, lon, rad) {
  //geojson construction
  var url = ("https://eapipoi.anagog.com/api/poi/?lat=" + lat + "&long=" + lon + "&rad=" + rad); //prepare URL
  var response = UrlFetchApp.fetch(url); //trigger the request
  var parse = JSON.parse(response); //parse response to java script object
  var data = parse['locations']; // preapre data for transformation
  var geojson = {}; // array initialization  
  geojson['type'] = 'FeatureCollection';
  geojson['features'] = [];
  for (var k in data) {
    var geopolys = [];
    var dataPolys = data[k]['poly']
    for (var l in dataPolys) {
      var geopoly = ("[" + dataPolys[l].long + ", " + dataPolys[l].lat + "]");
      geopolys.push(geopoly);
    var sortedGeopolys = returnCorrectArray(geopolys);  
    };
    
    var newFeature = {
      "type": "Feature",
      "geometry": {
        "type": "Polygon",
        "coordinates": [sortedGeopolys]
      },
      "properties": {
        "special": data[k].special,
        "name": data[k].name,
        "id": data[k].id,
        "type": data[k].type,
        "priority": data[k].priority,
        "value": data[k].value,
        "key": data[k].key,
        "tags": data[k].tags
      }
    }
    geojson['features'].push(newFeature); //new feature to the array
  }
  var geojsonToString = JSON.stringify(geojson);
      var res = geojsonToString.replace(/\"\[/g,/\[/);  // remove cordinates braces
  var res1 = res.replace(/\]\"/g,/\]/); // remove coordinates braces

  return "returnData("+res1+");"; //return output as a function
};