#include <iostream>
#include<vector>
using namespace std;
/**
Дефинирайте клас, описващ дати от календара.
Дефинирайте копиращ конструктор и такъв с параметри за задаване на дата.
Клас описващ студент - Име, Факултетен номер, Дата на раждане и Среден успех.
Метод, който сравнява за по-малко по даден параметър обект с текущия.
Демонстрирайте работата на класовете със създаване на колекция от студенти
и сортирайте студентите по успех в низходящ ред
*/
class Date{
private:
    int day;
    int mount;
    int year;

public:
    Date(int day,int mount,int year){
    this->day = day;
    this->mount = mount;
    this -> year = year;
    }
    Date(const Date &obj){
        this->day = obj.day;
        this-> mount =obj.mount;
        this-> year = obj.year;
    }
    Date(){}
};
class Student {
private:
    string name;
    string fNumber;
    Date date;
    double avrgSuccess;

public:
    Student(string name,string fNumber,Date date,double avrgSuccess){
    this->name = name;
    this->fNumber = fNumber;
    this->date= date;
    this->avrgSuccess = avrgSuccess;
    }
    Students(){}
    int compareTo(const Student student ){
        return student.avrgSuccess -this->avrgSuccess;
    }
    double getAvrgSuccess(){
    return avrgSuccess;
    }
};
int main()
{
    vector<Student> students;
    Date date1(8,10,1997);
    Date date2(8,10,1995);
    Date date3(8,10,1994);

    Student std1("David","1",date1,5.00);
    Student std2("Ginev","2",date2,3.00);
    Student std3("Valka","3",date3,6.00);
   students.push_back(std1);
   students.push_back(std2);
   students.push_back(std3);
   for(int i = 0;i<students.size()-1;i++){
    for(int j = 0;j<students.size()-1;j++){
        if(students[j].compareTo(students[j+1])){
            Student temp = students[j];
            students[j] = students[j+1];
            students[j+1] = temp;
        }
    } 
   }
   for(int i = 0;i<students.size();i++){
        cout<< students[i].getAvrgSuccess()<<endl;
   }
    cout << "Hello world!" << endl;
    return 0;
}