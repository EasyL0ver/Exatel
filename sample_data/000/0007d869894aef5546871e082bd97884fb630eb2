var React = require('react');
const fs = window.require('fs');//require('browserify-fs');
 
import {Treebeard} from 'react-treebeard';
import { Stats } from 'fs';
const path  = 'C:/ColiDEDebug/';
 
export default class App extends React.Component
{
    constructor(props){
        super(props);
        this.state = {
            data: {
                name: 'root',
                toggled: true,
                children: [
                    {
                        name: 'parent',
                        children: [
                            { name: 'child1' },
                            { name: 'child2' }
                        ]
                    },
                    {
                        name: 'loading parent',
                        loading: true,
                        children: []
                    },
                    {
                        name: 'parent',
                        children: [
                            {
                                name: 'nested parent',
                                children: [
                                    { name: 'nested child 1' },
                                    { name: 'nested child 2' }
                                ]
                            }
                        ]
                    }
                ]
            },
            stuff:"asasdasd",
        };
        this.onToggle = this.onToggle.bind(this);
        this.onClick = this.onClick.bind(this);
        this.getTreeHelper = this.getTreeHelper.bind(this);
        this.updateTree = this.updateTree.bind(this);
        this.getTree = this.getTree.bind(this);
    }

    onToggle(node, toggled){
        if(this.state.cursor){this.state.cursor.active = false;}
        node.active = true;
        if(node.children){ node.toggled = toggled; }
        this.setState({ cursor: node });
    }
 
    updateTree()
    {
        var data1 = {
        name: 'root',
        toggled: true,
        children: [
            {
 
            }
        ],
        add: (dir, name) => {
           
            var added = false;
            this.children.forEach(entry =>
            {
               
            });
        }
    };
       
    }
 
    getTree(dir)
    {
        var data1 = {
            name: 'root',
            toggled: true,
            children: [
                {
 
                }
            ]
        }
 
        return this.getTreeHelper(data1, dir, 'root');
    }
    getTreeHelper(obj, dir, nodename)
    {
        fs.readdir(path, function(err, items) {
            console.log(err);
            //console.log(items);
            var node = {
                name: nodename,
                children: [{}]
            }
           
            for (var i=0; i<items.length; i++)
            {
                if(fs.lstatSync(path + items[i]).isDirectory())
                {
                    this.getTreeHelper(node.children, dir + items[i] + "/", items[i]);
                }
                else
                {
                    var file = {
                        name: items[i]
                    }
                    node.children.push(file);
                }
            }
            console.log("tree:");
            console.log(node);
        });
    }
 
    onClick(){
        fs.readdir(path, function(err, items) {
            console.log(err);
            console.log(items);
       
            for (var i=0; i<items.length; i++) {
                console.log(items[i]);
                console.log(fs.lstatSync(path + items[i]).isDirectory());
            }
        });
        this.getTree(path);
 
        this.setState({
            data: {
                name: 'root',
                toggled: true,
                children: [
                    {
                        name: 'cs',
                        children: [
                            { name: 'alex' },
                            { name: 'agah' }
                        ]
                    },
                ]
            },
        });
    }
    render(){
        return (
            <div>
            <Treebeard
                data={this.state.data}
                onToggle={this.onToggle}
            />
            <h1 onClick={this.onClick}>{this.state.stuff}</h1>
            </div>
        );
    }
}