# Example output:
# $ python synctest.py
# f: 0.000144
# f2: 0.82
# g: 0.82

import time
import chainer
import cupy

N = 2048

dev = cupy.cuda.Device()
pool = cupy.cuda.MemoryPool()
handle = cupy.cuda.cublas.create()

A = pool.malloc(8 * N * N)
B = pool.malloc(8 * N * N)
C = pool.malloc(8 * N * N)


def f(rep=10):
    for i in range(rep):
        cupy.cuda.cublas.dgemm(handle, 0, 0, N, N, N, 1, A, N, B, N, 1, C, N)

def f2(rep=10):
    f(rep)
    dev.synchronize()


def g(rep=10):
    for i in range(rep):
        cupy.cuda.cublas.dgemm(handle, 0, 0, N, N, N, 1, A, N, B, N, 1, C, N)
        dev.synchronize()

def measure(func):
    beg = time.time()
    func()
    end = time.time()
    print("{}: {:.3}".format(func.__name__, end - beg))
        
    dev.synchronize()  # sync anyways
    
def main():
    measure(f)
    measure(f2)
    measure(g)


if __name__ == '__main__':
    main()