<?php /**
* Takes a string and modifies any <img> tags within it by:
* — Adding the class ‘lazy’
* — Removing the ‘src’ attribute
* — Adding the ‘data-original’ attribute using the original ‘src’ value
*
* @param $content
* @return string
*/
function sirv_lazyload_modify_img_tags( $content ) {
$content = mb_convert_encoding($content, ‘HTML-ENTITIES’, "UTF-8");

// Get out if we don’t have any content
if ( empty($content) )
return $content;

$document = new DOMDocument();
libxml_use_internal_errors(true);
$document->loadHTML(utf8_decode($content));

// Grab all image tags
$imgs = $document->getElementsByTagName(‘img’);

// Loop through all image tags
foreach ($imgs as $img) {

$existing_class = $img->getAttribute(‘class’); // Store existing class (if the image has one applied)
$src = $img->getAttribute(‘src’); // Store src attribute value

// Add ‘lazy’ class and the existing class(es) to the image
$img->setAttribute(‘class’, "Sirv $existing_class");

// Add a ‘data-original’ attribute with our ‘src’ attribute value
$img->setAttribute(‘data-src’, $src);

// Remove our src attribute
$img->removeAttribute(‘src’);

}

$html = $document->saveHTML();
return $html;
}

add_filter( ‘the_content’, ‘sirv_enable_lazy_loading_the_content’ );
/**
* Modifies the content to enable lazy loading for all <img> tags
*
* @uses sirv_lazyload_modify_img_tags()
* @param $content
* @return string
*/
function sirv_enable_lazy_loading_the_content( $content ) {
return sirv_lazyload_modify_img_tags($content);
}
?>