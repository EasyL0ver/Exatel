;; -*- mode: scheme; coding: utf-8-unix; fill-column: 80 -*-

(require srfi/9)

(define-record-type :cstream
    (cstream cs-car cs-cdr)
    cstream?
    (cs-car cs-car set-cs-car!)
    (cs-cdr cs-cdr set-cs-cdr!))

(define get-cs-car
  (lambda (cs)
    (cs-car cs)))

(define get-cs-cdr
  (lambda (cs)
    (force (cs-cdr cs))))

(define replicated
  (lambda (n)
    (cstream n (delay (replicated n)))))

(define integers-starting-from
  (lambda (n)
    (cstream n (delay (integers-starting-from (+ n 1))))))

(define naturals (integers-starting-from 0))
(define zeroes (replicated 0))

(displayln (get-cs-car naturals))
(displayln (get-cs-car (get-cs-cdr (get-cs-cdr naturals))))

(displayln (get-cs-car zeroes))
(displayln (get-cs-car (get-cs-cdr (get-cs-cdr zeroes))))