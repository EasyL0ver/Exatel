-- This script has been converted to FE by iPxter


if game:GetService("RunService"):IsClient() then error("Script must be server-side in order to work; use h/ and not hl/") end
local Player,Mouse,mouse,UserInputService,ContextActionService = owner
do
	print("FE Compatibility code by Mokiros | Translated to FE by iPxter")
	script.Parent = Player.Character

	--RemoteEvent for communicating
	local Event = Instance.new("RemoteEvent")
	Event.Name = "UserInput_Event"

	--Fake event to make stuff like Mouse.KeyDown work
	local function fakeEvent()
		local t = {_fakeEvent=true,Connect=function(self,f)self.Function=f end}
		t.connect = t.Connect
		return t
	end

	--Creating fake input objects with fake variables
    local m = {Target=nil,Hit=CFrame.new(),KeyUp=fakeEvent(),KeyDown=fakeEvent(),Button1Up=fakeEvent(),Button1Down=fakeEvent()}
	local UIS = {InputBegan=fakeEvent(),InputEnded=fakeEvent()}
	local CAS = {Actions={},BindAction=function(self,name,fun,touch,...)
		CAS.Actions[name] = fun and {Name=name,Function=fun,Keys={...}} or nil
	end}
	--Merged 2 functions into one by checking amount of arguments
	CAS.UnbindAction = CAS.BindAction

	--This function will trigger the events that have been :Connect()'ed
	local function te(self,ev,...)
		local t = m[ev]
		if t and t._fakeEvent and t.Function then
			t.Function(...)
		end
	end
	m.TrigEvent = te
	UIS.TrigEvent = te

	Event.OnServerEvent:Connect(function(plr,io)
	    if plr~=Player then return end
		if io.isMouse then
			m.Target = io.Target
			m.Hit = io.Hit
		else
			local b = io.UserInputState == Enum.UserInputState.Begin
			if io.UserInputType == Enum.UserInputType.MouseButton1 then
				return m:TrigEvent(b and "Button1Down" or "Button1Up")
			end
			for _,t in pairs(CAS.Actions) do
				for _,k in pairs(t.Keys) do
					if k==io.KeyCode then
						t.Function(t.Name,io.UserInputState,io)
					end
				end
			end
			m:TrigEvent(b and "KeyDown" or "KeyUp",io.KeyCode.Name:lower())
			UIS:TrigEvent(b and "InputBegan" or "InputEnded",io,false)
	    end
	end)
	Event.Parent = NLS([==[
	local Player = game:GetService("Players").LocalPlayer
	local Event = script:WaitForChild("UserInput_Event")

	local UIS = game:GetService("UserInputService")
	local input = function(io,a)
		if a then return end
		--Since InputObject is a client-side instance, we create and pass table instead
		Event:FireServer({KeyCode=io.KeyCode,UserInputType=io.UserInputType,UserInputState=io.UserInputState})
	end
	UIS.InputBegan:Connect(input)
	UIS.InputEnded:Connect(input)

	local Mouse = Player:GetMouse()
	local h,t
	--Give the server mouse data 30 times every second, but only if the values changed
	--If player is not moving their mouse, client won't fire events
	while wait(1/30) do
		if h~=Mouse.Hit or t~=Mouse.Target then
			h,t=Mouse.Hit,Mouse.Target
			Event:FireServer({isMouse=true,Target=t,Hit=h})
		end
	end]==],Player.Character)
	Mouse,mouse,UserInputService,ContextActionService = m,m,UIS,CAS
end


--By Rufus14
rig = game.Players.StarzoZero.Character.Torso
game.Players.StarzoZero.Character.Animate:destroy()
run = Instance.new("Sound", game.Players.StarzoZero.Character.Head)
run.SoundId = "rbxassetid://142665235"
run.Volume = 0
run.Looped = true
run:Play()
run.PlaybackSpeed = 1.2
print(rig["Left Hip"].C0)
print(rig["Right Hip"].C0)
cart = Instance.new("Part", rig)
cart.CanCollide = false
weld = Instance.new("Weld", cart)
weld.Part0 = cart
weld.Part1 = rig
mesh = Instance.new("SpecialMesh", cart)
mesh.MeshId = "rbxassetid://552693518"
mesh.TextureId = "rbxassetid://552693524"
mesh.Scale = Vector3.new(7.2,7,8)
weld.C0 = weld.C0 * CFrame.new(0,1,4.2)
walking = true
game.Players.StarzoZero.Character.Humanoid.WalkSpeed = 25
for i = 1,20 do
    wait()
    rig["Left Shoulder"].C0 = rig["Left Shoulder"].C0 * CFrame.Angles(0,0,-0.08)
    rig["Right Shoulder"].C0 = rig["Right Shoulder"].C0 * CFrame.Angles(0,0,0.08)
end
function walk(key)
    key = key:lower()
    if key == "w" then
    walking = true
    run.Volume = 10
    if walking == true then
    wait()
    for i = 1,5 do
    rig["Left Hip"].C0 = rig["Left Hip"].C0 * CFrame.Angles(0,0,-0.2)
    rig["Right Hip"].C0 = rig["Right Hip"].C0 * CFrame.Angles(0,0,-0.2)
    end
    while walking == true do
    for i = 1,5 do
    wait()
    rig["Left Hip"].C0 = rig["Left Hip"].C0 * CFrame.Angles(0,0,0.4)
    rig["Right Hip"].C0 = rig["Right Hip"].C0 * CFrame.Angles(0,0,0.4)
    end
    for i = 1,5 do
    wait()
    rig["Left Hip"].C0 = rig["Left Hip"].C0 * CFrame.Angles(0,0,-0.4)
    rig["Right Hip"].C0 = rig["Right Hip"].C0 * CFrame.Angles(0,0,-0.4)
    end
    end
    end
    end
    end
mouse.KeyDown:connect(walk)
function notwalk(key)
    key = key:lower()
    if key == "w" then
        walking = false
        run.Volume = 0
        for i = 1,10 do
        wait()
        rig["Left Hip"].C0 = CFrame.new(-1, -1, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0)
        rig["Right Hip"].C0 = CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0)
        end
    end
end
mouse.KeyUp:connect(notwalk)
---------------------------------
walking1 = false
function walk1(key)
    key = key:lower()
    if key == "d" then
    walking1 = true
    if walking1 == true then
    wait()
    run.Volume = 10
    for i = 1,5 do
    rig["Left Hip"].C0 = rig["Left Hip"].C0 * CFrame.Angles(0,0,-0.2)
    rig["Right Hip"].C0 = rig["Right Hip"].C0 * CFrame.Angles(0,0,-0.2)
    end
    while walking1 == true do
    for i = 1,5 do
    wait()
    rig["Left Hip"].C0 = rig["Left Hip"].C0 * CFrame.Angles(0,0,0.4)
    rig["Right Hip"].C0 = rig["Right Hip"].C0 * CFrame.Angles(0,0,0.4)
    end
    for i = 1,5 do
    wait()
    rig["Left Hip"].C0 = rig["Left Hip"].C0 * CFrame.Angles(0,0,-0.4)
    rig["Right Hip"].C0 = rig["Right Hip"].C0 * CFrame.Angles(0,0,-0.4)
    end
    end
    end
    end
    end
mouse.KeyDown:connect(walk1)
function notwalk1(key)
    key = key:lower()
    if key == "d" then
        walking1 = false
        run.Volume = 0
        for i = 1,10 do
        wait()
        rig["Left Hip"].C0 = CFrame.new(-1, -1, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0)
        rig["Right Hip"].C0 = CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0)
        end
    end
end
mouse.KeyUp:connect(notwalk1)
------------------------------------------
walking2 = false
function walk2(key)
    key = key:lower()
    if key == "a" then
    walking2 = true
    run.Volume = 10
    if walking2 == true then
    wait()
    for i = 1,5 do
    rig["Left Hip"].C0 = rig["Left Hip"].C0 * CFrame.Angles(0,0,-0.2)
    rig["Right Hip"].C0 = rig["Right Hip"].C0 * CFrame.Angles(0,0,-0.2)
    end
    while walking2 == true do
    for i = 1,5 do
    wait()
    rig["Left Hip"].C0 = rig["Left Hip"].C0 * CFrame.Angles(0,0,0.4)
    rig["Right Hip"].C0 = rig["Right Hip"].C0 * CFrame.Angles(0,0,0.4)
    end
    for i = 1,5 do
    wait()
    rig["Left Hip"].C0 = rig["Left Hip"].C0 * CFrame.Angles(0,0,-0.4)
    rig["Right Hip"].C0 = rig["Right Hip"].C0 * CFrame.Angles(0,0,-0.4)
    end
    end
    end
    end
    end
mouse.KeyDown:connect(walk2)
function notwalk2(key)
    key = key:lower()
    if key == "a" then
        walking2 = false
        run.Volume = 0
        for i = 1,10 do
        wait()
        rig["Left Hip"].C0 = CFrame.new(-1, -1, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0)
        rig["Right Hip"].C0 = CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0)
        end
    end
end
mouse.KeyUp:connect(notwalk2)
----------------------------------------------------
walking3 = false
function walk3(key)
    key = key:lower()
    if key == "s" then
    walking3 = true
    run.Volume = 10
    if walking3 == true then
    wait()
    for i = 1,5 do
    rig["Left Hip"].C0 = rig["Left Hip"].C0 * CFrame.Angles(0,0,-0.2)
    rig["Right Hip"].C0 = rig["Right Hip"].C0 * CFrame.Angles(0,0,-0.2)
    end
    while walking3 == true do
    for i = 1,5 do
    wait()
    rig["Left Hip"].C0 = rig["Left Hip"].C0 * CFrame.Angles(0,0,0.4)
    rig["Right Hip"].C0 = rig["Right Hip"].C0 * CFrame.Angles(0,0,0.4)
    end
    for i = 1,5 do
    wait()
    rig["Left Hip"].C0 = rig["Left Hip"].C0 * CFrame.Angles(0,0,-0.4)
    rig["Right Hip"].C0 = rig["Right Hip"].C0 * CFrame.Angles(0,0,-0.4)
    end
    end
    end
    end
    end
mouse.KeyDown:connect(walk3)
function notwalk3(key)
    key = key:lower()
    if key == "s" then
        walking3 = false
        run.Volume = 0
        for i = 1,10 do
        wait()
        rig["Left Hip"].C0 = CFrame.new(-1, -1, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0)
        rig["Right Hip"].C0 = CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0)
        end
    end
end
mouse.KeyUp:connect(notwalk3)
grabbing = true
function grab1(cart1)
        if grabbing == true then
        local torso = cart1.Parent:findFirstChild("Torso")
                if torso ~= nil then
                local hum = cart1.Parent:findFirstChild("Humanoid")
                if hum ~= nil then
                hum.PlatformStand = true
        local weld1 = Instance.new("Weld", torso)
        weld1.Part0 = torso
        weld1.Part1 = cart
        weld1.C0 = weld1.C0 * CFrame.Angles(-8,0,1.2) * CFrame.new(0,-1.4,0)
                end
                end
    end
    end
cart.Touched:connect(grab1)