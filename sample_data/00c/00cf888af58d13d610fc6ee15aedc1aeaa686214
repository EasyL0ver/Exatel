#include <iostream>
#include <vector>
using namespace std;

const int log=17;
int n, m, ans;
vector<int> g[30001];
int dist[30001];
int lca[30001][log];

void calculate_lca_0(int a, int p){
	lca[a][0]=p;
	for(auto b:g[a])if(b!=p){
		dist[b]=dist[a]+1;
		calculate_lca_0(b,a);
	}
}
int find_distance(int a, int b){
	int d=dist[a]+dist[b];
	while(dist[a]>dist[b])a=lca[a][0];
	while(dist[b]>dist[a])b=lca[b][0];
	if(a==b)return d-2*dist[a];
	for(int l=log-1;l>=0;l--)
		if(lca[a][l]!=lca[b][l]){
			a=lca[a][l];
			b=lca[b][l];
		}
	return d-2*dist[lca[a][0]];
}

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);cout.tie(0);
	cin>>n;
	for(int a,b,i=0;i<n-1;i++){
		cin>>a>>b;a--;b--;
		g[a].push_back(b);
		g[b].push_back(a);
	}
	dist[0]=0;calculate_lca_0(0,0);
	for(int l=1;l<log;l++)
		for(int i=0;i<n;i++)
			lca[i][l]=lca[lca[i][l-1]][l-1];
	cin>>m>>ans;ans=0;
	for(int a=0,b,_m=0;_m<m-1;_m++,a=b){
		cin>>b;b--;
		ans+=find_distance(a,b);
	}
	cout<<ans;
}