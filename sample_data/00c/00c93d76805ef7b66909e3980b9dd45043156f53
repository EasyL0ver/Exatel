inPit = false
loops = 1

local function forward(count)
	if count == nil then count = 1 end
	for i = 1, count do
		res = turtle.forward()
	end
	return res
end

local function up(count)
	if count == nil then count = 1 end
	for i = 1, count do
		res = turtle.up()
	end
	return res
end

local function down(count)
	if count == nil then count = 1 end
	for i = 1, count do
		res = turtle.down()
	end
	return res
end

local function turnLeft(count)
	if count == nil then count = 1 end
	for i = 1, count do
		turtle.turnLeft()
	end
	return res
end

local function turnRight(count)
	if count == nil then count = 1 end
	for i = 1, count do
		res = turtle.turnRight()
	end
	return res
end

local function enterPit()
	forward(3)
	down()
	inPit = true
	return true
end

local function exitPit()
	turnLeft(2)
	up()
	forward(3)
	turnLeft(2)
	inPit = false
	return true
end

local function deposit()
	if inPit then
		exitPit()
	end
	turnLeft()
	turtle.up()
	forward(2)
	for i = 3,16 do
		turtle.select(i)
		turtle.dropDown()
	end
	turtle.select(1)
	turnRight(2)
	forward(2)
	turtle.down()
	turnLeft()
	return true
end

local function refuel(count)
	if count == nil then count = 1 end
	function fuelUp()
    	os.sleep(4)
		turtle.placeDown()
		turtle.refuel()
   	end
	if inPit then
		exitPit()
	end
	deposit()
	forward()
	turnRight()
	turtle.select(2)
	turtle.place()
	turtle.select(1)
	turnLeft()
	forward(2)
	down()
	turtle.digDown()
	for i = 1, count do
		fuelUp()
	end
	exitPit()
	forward()
	turnRight()
	turtle.dig()
	turtle.select(3)
	if turtle.getItemDetail().name:match(":(.+)") == "redstone_torch" then
		turtle.select(2)
		turtle.transferTo(4)
		turtle.select(3)
		turtle.transferTo(2)
	end
	turtle.select(1)
	turnRight()
	forward()
	turnRight(2)
	return true
end

local function digLoopOnce()
	function turnCorner()
    	forward()
		turnRight()
		forward()
   	end
	turtle.digDown()
	turnLeft()
	turnCorner()
	turtle.digDown()
	turnCorner()
	turtle.digDown()
	turnCorner()
	turtle.digDown()
	turnCorner()
	turnRight()
end

local function restartFloodGate()
	if not down() then
		turtle.digDown()
		down()
	end

	turtle.dig()
	for i = 3,16 do
		turtle.select(i)
		if turtle.getItemDetail().name:match(":(.+)") == "floodGateBlock" then
			turtle.place()
			turtle.select(1)
			break
		end
	end
	up()
end

local function start()
	if not inPit then
		enterPit()
	end
	restartFloodGate()
	for i = 1,loops do
		if turtle.getFuelLevel() < 20000 then
			exitPit()
			refuel(20)
			enterPit()
		end
		digLoopOnce()
		restartFloodGate()
		if turtle.getItemCount(16) > 0 then
			exitPit()
			deposit()
			enterPit()
		end
	end
	if inPit then
		exitPit()
	end
end

start()