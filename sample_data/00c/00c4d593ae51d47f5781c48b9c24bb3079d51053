from indexer import word_dict
"""
Reads a document from a file that will process each line by stripping off excess
white space and splitting it up into its individual words and converting them to
lower case.

Additionally, this will keep track of how many times a word appears in the document
and handle various means of punctuation accordingly
"""

def main():

    readfile()
    parse_file()
    generate_lines()
    findword()


def readfile():
    """
    Scenario: does the password have at least one letter, upper or lower
    GIVEN: password = @123123123123
    WHEN: password has no letters
    THEN: password is not valid and requires a letter
    """
    password = '@123123123123'
    assert not is_valid(password)


def parse_file():
    """
    Scenario: 
    GIVEN: @abcabcabcabc
    WHEN: password has no numbers
    THEN: it is not valid, must have at least one
    """
    password = '@abcabcabcabc'
    assert not is_valid(password)


def generate_lines():
    """
    Scenario: does the password have one of required special characters
    GIVEN: password = 123abc123abc123
    WHEN: password does not have @, $, or #
    THEN: passowrd is not valid and needs one of these characters
    """
    password = '123abc123abc'
    assert not is_valid(password)


def findword():
    """
    Scenario: is the word in word_dict
    GIVEN: word is in word_dict
    WHEN: the word is available to use
    THEN: password is not long enough and needs more characters
    """
    password = 'a1@1'
    assert not is_valid(password)


main()