library(ggbio)
library(GenomicRanges)
library(Homo.sapiens)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(EnsDb.Hsapiens.v75)
library(biovizBase)
library(BSgenome.Hsapiens.UCSC.hg19)
library(VariantAnnotation)

## Building tracks 
# Ideogram tracks
p.ideo <- Ideogram(genome = "hg19")
p.ideo

# Special highlighting instead of zooming
p.ideo + xlim(GRanges("chr2", IRanges(1e8, 1e8+10000000)))

# make gene model from organismDb object
data(genesymbol, package = "biovizBase")
wh <- genesymbol[c("BRCA1", "NBR1")]
wh <- range(wh, ignore.strand = TRUE)
p.txdb <- autoplot(Homo.sapiens, which  = wh)
p.txdb

# Change fill and colors
autoplot(Homo.sapiens, which  = wh, label.color = "black", color = "brown",
         fill = "brown")

# Change intron geometry
autoplot(Homo.sapiens, which = wh, gap.geom = "chevron")

# Collapse features
autoplot(Homo.sapiens, which = wh, stat = "reduce")

# Add different attributes, for example GO categories
columns(Homo.sapiens)
autoplot(Homo.sapiens, which = wh, columns = c("TXNAME", "GO"), names.expr = "TXNAME::GO")

# Make gene models from TxDb objects
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
autoplot(txdb, which = wh)

# Make gene models from EnsDB object
ensdb <- EnsDb.Hsapiens.v75
autoplot(ensdb, GenenameFilter("PHKG2"))

# Passing filters from AnnotationFilter package
autoplot(ensdb, ~ symbol == "PHKG2", names.expr="gene_name")

# Specify genomic region and fetch all transcripts overlapping that region
gr <- GRanges(seqnames = 16, IRanges(30768000, 30770000), strand = "*")
autoplot(ensdb, GRangesFilter(gr), names.expr = "gene_name")

# Its possible to specify gene ids directly
autoplot(ensdb, GeneIdFilter(c("ENSG00000196118", "ENSG00000156873")))

# Make gene model from GRangesList object
gr.txdb <- crunch(txdb, which = wh)
gr.txdb
colnames(values(gr.txdb))[4] <- "model"
grl <- split(gr.txdb, gr.txdb$tx_id)
## fake some randome names
names(grl) <- sample(LETTERS, size = length(grl), replace = TRUE)
grl
autoplot(grl, aes(type = model))
ggplot() + geom_alignment(grl, type = "model")

## Add reference track
# here we need BSgenome object
bg <- BSgenome.Hsapiens.UCSC.hg19
p.bg <- autoplot(bg, which = wh)
p.bg
p.bg + zoom(1/100)
p.bg + zoom(1/2500)
autoplot(bg, which = resize(wh, width = width(wh)/2000), geom = "segment")

# Add an alignment track
fl.bam <- system.file("extdata", "wg-brca1.sorted.bam", package = "biovizBase")
wh <- keepSeqlevels(wh, "chr17")
autoplot(fl.bam, which = wh)

# Show mismatch proportions
p.mis <- autoplot(fl.bam, bsgenome = bg, which = wh, stat = "mismatch")
p.mis

# Show overall coverage distribution
autoplot(fl.bam, method = "estimate")

## Add variants track
fl.vcf <- system.file("extdata", "17-1409-CEU-brca1.vcf.bgz", package="biovizBase")
vcf <- readVcf(fl.vcf, "hg19")
vr <- as(vcf[, 1:3], "VRanges")
vr <- renameSeqlevels(vr, value = c("17" = "chr17"))
## small region contains data
gr17 <- GRanges("chr17", IRanges(41234400, 41234530))
p.vr <- autoplot(vr, which = wh)
p.vr
# rect geom
p.vr + xlim(gr17)
# text geom
p.vr + xlim(gr17) + zoom()

# Building the tracks
## tks <- tracks(p.ideo, mismatch = p.mis, dbSNP = p.vr, ref = p.bs, gene = p.txdb)
## tks <- tracks(fl.bam, fl.vcf, bs, Homo.sapiens) ## default ideo = FALSE, turned on
## tks <- tracks(fl.bam, fl.vcf, bs, Homo.sapiens, ideo = TRUE)
## tks + xlim(gr17)
gr17 <- GRanges("chr17", IRanges(41234415, 41234569))
tks <- tracks(p.ideo, mismatch = p.mis, dbSNP = p.vr, ref = p.bg, gene = p.txdb,
              heights = c(2, 3, 3, 1, 4)) + xlim(gr17) + theme_tracks_sunset()
tks