public class Main11Activity extends AppCompatActivity implements  OnItemSelectedListener{


    public Spinner spinnerZona, spinnerPosicion;
    public TextView Comentarios;



    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main11);

        spinnerZona = (Spinner) findViewById(R.id.spinnerZona);
        spinnerPosicion = (Spinner) findViewById(R.id.spinnerPosicion);

        ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(
                this,
                R.array.ZonasEP0,
                android.R.layout.simple_spinner_item);

        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        spinnerZona.setAdapter(adapter);

        spinnerZona.setOnItemSelectedListener(this);



    }

    @Override
    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {

        int[] Posiciones = {R.array.SinPosicion, R.array.PosicionesEP0_K, R.array.PosicionesEP0_E, R.array.PosicionesEP0_F, R.array.PosicionesEP0_G, R.array.PosicionesEP0_GR};


    ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(
            this,
            Posiciones[position],
            android.R.layout.simple_spinner_item);

    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);


    spinnerPosicion.setAdapter(adapter);


    }



    @Override

    public void onNothingSelected(AdapterView<?> parent) {


      }}

}
	
private void setupSpinner() {
    // Crear adaptador para el spinner. La lista de opciones son del String array 
    // El spinner usara este layout por defecto
    ArrayAdapter genderSpinnerAdapter = ArrayAdapter.createFromResource(this,
            R.array.array_gender_options, android.R.layout.simple_spinner_item);

    // Especificando dropdown layout style - simple list view with 1 item por linea
    genderSpinnerAdapter.setDropDownViewResource(android.R.layout.simple_dropdown_item_1line);

    // Aplicando el adaptador al spinner
    mGenderSpinner.setAdapter(genderSpinnerAdapter);

    // Estableciendo el valor entero de mSelected a una variable cada vez que se seleccione un item
    mGenderSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
        @Override
        public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
            String selection = (String) parent.getItemAtPosition(position);
            if (!TextUtils.isEmpty(selection)) {
                if (selection.equals(getString(R.string.gender_male))) {
                    mGender = PetsContract.PetsEntry.MASCULINO; // Male
                } else if (selection.equals(getString(R.string.gender_female))) {
                    mGender = PetsContract.PetsEntry.FEMENINO; // Female
                } else {
                    mGender = PetsContract.PetsEntry.SIN_GENERO; // Unknown
                }
            }
        }

        // Debido a que el AdapterView es una abstract class, onNothingSelected debe ser tambien definido
        @Override
        public void onNothingSelected(AdapterView<?> parent) {
            mGender = PetsContract.PetsEntry.SIN_GENERO; // Unknown
        }
    });
}
	
tuSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                @Override
                public void onItemSelected(AdapterView<?> adapterView, View view, final int itemSeleccionado, long l) {
                    if (itemSeleccionado==opcion) {
                       //Puedes hacer algo si se cumple la condici√≥n....
                    }
                }

                @Override
                public void onNothingSelected(AdapterView<?> adapterView) {

                }
            });