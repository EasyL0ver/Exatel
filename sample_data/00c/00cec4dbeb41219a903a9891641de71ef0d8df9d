public RenderTarget2D GetStarfield(int seed)
        {
            RenderTarget2D renderTarget;
            Random rand = new Random(seed);
            Camera camera = new Camera(null, GlobalSettings.StarfieldSize, GlobalSettings.StarfieldSize);
            Layer layer = new Layer();

            double start = TimeManager.SystemCurrentTime;

            int targetSize = GlobalSettings.StarfieldSize;
            var halfWidth = targetSize / 2f;
            var halfHeight = targetSize / 2f;

            renderTarget = new RenderTarget2D(FlatRedBallServices.GraphicsDevice, GlobalSettings.StarfieldSize, GlobalSettings.StarfieldSize);
            layer.RenderTarget = renderTarget;
            camera.DrawsWorld = false;
            camera.UsePixelCoordinates3D(0);
            camera.AddLayer(layer);

            // create stars
            for (int i = 0; i < GlobalSettings.StarfieldStars; i++)
            {
                var star = GetStar();
                star.X = rand.FloatInRange(-halfWidth, halfWidth);
                star.Y = rand.FloatInRange(-halfHeight, halfHeight);
                star.TextureScale = rand.FloatInRange(GlobalSettings.StarfieldMinStarScale,
                    GlobalSettings.StarfieldMaxStarScale);

                // accent star
                if(rand.NextDouble() < GlobalSettings.StarfieldAccentStarsPercent)
                {
                    star.TextureScale *= rand.FloatInRange(1f, GlobalSettings.StarfieldAccentStarMultiplier);
                }

                star.Alpha = rand.FloatInRange(GlobalSettings.StarfieldMinAlpha,
                    GlobalSettings.StarfieldMaxAlpha);
                SpriteManager.ManualUpdate(star);
                layer.AddManualSpriteOneWay(star);
            }

            // create clouds
            var clouds = rand.Next(1, GlobalSettings.StarfieldMaxCloudCount);
            for (int i = 0; i < clouds; i++)
            {
                var cloud = GetCloud(rand.NextDouble());
                cloud.Colorize(rand.Color());

                cloud.X = rand.FloatInRange(-halfWidth, halfWidth);
                cloud.Y = rand.FloatInRange(-halfWidth, halfWidth);
                cloud.TextureScale = rand.FloatInRange(GlobalSettings.StarfieldMinCloudScale,
                    GlobalSettings.StarfieldMaxCloudScale);
                cloud.Alpha = rand.FloatInRange(GlobalSettings.StarfieldMinCloudAlpha,
                    GlobalSettings.StarfieldMaxCloudAlpha);
                cloud.RotationZ = rand.FloatInRange(-3.14f, 3.14f);
                SpriteManager.ManualUpdate(cloud);
                layer.AddManualSpriteOneWay(cloud);
            }

            // draw once
            Renderer.DrawCamera(camera, null);

            double end = TimeManager.SystemCurrentTime;
            double elapsed = end - start;
            Logging.Log.Info("Elapsed: " + elapsed);

            return renderTarget;
        }