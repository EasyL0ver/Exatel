#define _CRT_SECURE_NO_WARNINGS 
#define pb push_back 
#include <iostream> 
#include <climits> 
#include <algorithm> 
#include <iomanip> 
#include <cmath> 
#include <vector> 
#include <map> 
#include <string> 
#include <stack> 
#include <set> 
#include <cstdio> 
#include <cctype> 
#include <queue> 
#include <bitset> 
#include <functional> 
#include <cassert> 

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;
typedef long double ld;
typedef double db;

const int N = 2 * 1e5 + 20;
const ll INF = 2 * 1e18 + 20;

int a[N];
int b[N];
int del[N];
int used[N];
map<int, int> g;

int gcd(int a, int b) {
	if (b == 0) return a;
	return gcd(b, a % b);
}


int main() {
#ifndef ONLINE_JUDGE 
	freopen("input.txt", "r", stdin);
#else 
#endif 
	ios_base::sync_with_stdio(0);
	cin.tie(0); cout.tie(0);

	int n;
	cin >> n;
	for (int i = 1; i <= n; ++i) {
		cin >> a[i];
		g[a[i]] = i;
	}
	for (int i = 1; i <= n; ++i) {
		cin >> b[i];
	}
	vector<vector<int>> per(n);
	vector<int> id(n + 1);
	int f = 0;
	for (int i = 1; i <= n; ++i) {
		if (used[i] == 0) {
			int s = i;
			used[s] = 1;
			per[f].pb(s);
			id[s] = f;
			s = g[s];
			while (s != i) {
				used[s] = 1;
				del[s] = per[f].size();
				per[f].pb(s);
				id[s] = f;
				s = g[s];
			}
			f++;
		}
	}
	int lcm = 1;
	for (int i = 1; i <= n; ++i) {
		if (id[b[i]] != id[i]) {
			cout << "No";
			return 0;
		}
		int len = per[id[i]].size();
		int gc = gcd((del[b[i]] - del[i] + len) % len, len);
		lcm = (lcm * gc) / gcd(lcm, gc);
	}
	for (int i = 1; i <= n; ++i) {
		int len = per[id[i]].size();
		if ((lcm - ((del[b[i]] - del[i] + len) % len)) % len) {
			cout << "No";
			return 0;
		}
	}
	cout << "Yes";
	return 0;
}